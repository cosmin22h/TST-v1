{"version":3,"sources":["admin/AdminNavbar.js","apis/backend.js","admin/users/DeleteUser.js","admin/users/RenderUsers.js","admin/users/AddUser.js","admin/users/EditUser.js","admin/tvshows/ViewTvShows.js","apis/tmdb.js","components/SearchBar.js","admin/tvshows/PopupTV.js","admin/tvshows/AddTvShows.js","admin/tvshows/TvShow.js","admin/episodes/ViewEpisodes.js","admin/episodes/Episode.js","admin/episodes/AddEpisode.js","components/links/LinkClassic.js","components/SearchBarUser.js","components/Theme.js","components/ModalOrg.js","users/Friends.js","users/NavbarUser.js","pages/TvShowInfo.js","components/icons/InfoIconOrg.js","components/links/LinkOrg.js","components/Copyright.js","components/texts/TextFieldOrg.js","components/buttons/ButtonOrg.js","pages/Login.js","pages/SignUp.js","pages/ForgetPassword.js","pages/ChangePassword.js","pages/IndexPage.js","users/tvshows/List4TvShow.js","users/AvatarProfile.js","users/Profile.js","components/texts/TextFieldClassic.js","users/EditProfile.js","components/ListTvShows.js","users/tvshows/ExploreTvShows.js","components/buttons/ButtonClassic.js","apis/youtube.js","users/tvshows/EpisodeDetails.js","users/tvshows/TvShowDetails.js","users/tvshows/Search.js","users/FriendProfile.js","users/tvshows/Comments.js","admin/Comments.js","pages/Report.js","admin/indexAdmin.js","admin/ReportAdmin.js","components/App.js","index.js"],"names":["Alert","props","elevation","variant","AdminNavBar","logout","useState","message","setMessage","newComment","setNewComment","register","setRegister","newRegister","setNewRegister","useEffect","websocket","SockJS","stompClient","Stomp","connect","frame","subscribe","notification","body","className","to","onClick","Snackbar","open","autoHideDuration","onClose","severity","axios","create","baseURL","headers","post","DeleteUser","user","cancelDelete","deleteUser","username","RenderUsers","list","seletedUser","users","setUsers","setDeleteUser","refresh","setRefresh","getUsers","a","backend","get","response","data","console","log","onCancel","confirmDeleteUser","delete","id","length","map","isActive","isLogin","authSession","type","checked","onChange","handleInputChange","email","role","dateJoined","dateLastLogin","dateLastLogout","colSpan","undefined","roles","label","value","AddUser","password","newUser","setNewUser","backdrop","setBackdrop","onChangeForm","event","target","name","onFormSubmit","e","preventDefault","userRole","alert","then","window","location","assign","catch","err","error","includes","Fragment","Backdrop","style","color","CircularProgress","onSubmit","placeholder","required","EditUser","useParams","setUser","updatedUser","setUpdatedUser","getUser","put","JSON","stringify","ViewTvShows","tvShows","setTvShows","getTvShows","show","status","tmdbId","noOfSeasons","noOfEpisodes","nextAirDate","SearchBar","labelText","term","setTerm","PopupTV","image","header","content","extrabtn","msg","togglePopout","onAddEvent","alt","src","widtg","hight","typeMsg","textAlign","renderedMsg","KEY","URL_PHOTOS","MSGS","AddTvShows","popout","setPopout","genres","posterPath","overview","networks","episodeRunTime","firstAirDate","lastAirDate","tvshow","setTvShow","episodes","setEpisodes","isIn","inDatabase","setInDatabase","onSearchSubmit","idTv","responseInDatabse","tmdb","responseTvShows","episodesToBackend","i","number_of_seasons","season","j","epData","push","noSeason","season_number","episodeNumber","episode_number","airDate","air_date","stillPath","still_path","dataTvShow","genre","poster_path","number_of_episodes","network","Math","max","episode_run_time","first_air_date","last_air_date","next_episode_to_air","addTvShow","TvShow","isDelele","setIsDelete","rating","tvShow","getTvShow","split","onFormSubmitUpdate","onFormSubmitDelete","readOnly","min","s","step","ViewEpisodes","getEpisodes","ep","Episode","idShow","idEpisode","episode","setEpisode","getEpisode","AddEpisode","LinkClassic","withStyles","root","textDecoration","Link","useStyles","makeStyles","theme","inputRoot","inputInput","padding","spacing","paddingLeft","transition","transitions","width","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","marginLeft","searchIcon","height","pointerEvents","display","alignItems","justifyContent","SearchBarUser","onFormChange","classes","InputBase","input","darkTheme","createMuiTheme","modal","overflow","paperFade","top","border","boxShadow","shadows","ModalOrg","children","ThemeProvider","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","in","maxWidth","text","button","margin","button2","primary","red","secondary","green","Friends","viewFriends","onChangeNotification","friends","setFriends","history","useHistory","localStorage","getItem","getFriends","res","getRequests","List","dense","friend","index","labelId","friendData","ListItem","ListItemAvatar","Avatar","ListItemText","href","displayName","Button","idFriend","unfriend","idUser","confirmFriend","rejectFriend","grow","flexGrow","bar","explore","title","fontFamily","sectionDesktop","exploreLabel","fontSize","NavbarUser","tvShowName","setTvShowName","notificationNo","setNotificationNo","setOpen","openNotification","setOpenNotification","messageNotification","setMessageNotification","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","AppBar","Toolbar","Typography","noWrap","IconButton","aria-label","Badge","badgeContent","edge","aria-controls","aria-haspopup","currentTarget","details","flexDirection","flex","controls","paddingBottom","TvShowInfo","CardContent","component","join","InfoIconOrg","InfoIcon","LinkOrg","Copyright","align","Date","getFullYear","TextFieldOrg","borderColor","WebkitBoxShadow","TextField","ColorButton","getContrastText","paper","avatar","form","marginTop","submit","Login","signUp","forgetPassword","userRequest","setUserRequets","visibility","setVisibilty","acitivateSession","setItem","toString","btoa","reload","fullWidth","InputProps","endAdornment","InputAdornment","Visibility","VisibilityOff","ButtonOrg","Grid","container","item","xs","Box","mt","zIndex","drawer","SignUp","login","confirmPass","setConfirmPass","goBack","field","confirmPassword","ForgetPassword","setEmail","resetPasswordRequest","ChangePassword","changePassword","token","newPassword","setNewPassword","isErrToken","setIsErrToken","validateToken","IndexPage","indexType","typeSelected","posters","setPosters","openInfo","setOpenInfo","tvShowInfo","setTvShowInfo","getPosters","CssBaseline","sm","md","GridList","cellHeight","cols","tile","GridListTile","GridListTileBar","actionIcon","icon","Paper","justify","List4TvShows","Container","gridList","subtitle","media","AvatarProfile","setAvatar","isAvatar","setIsAvatar","getAvatar","Card","CardMedia","URL","createObjectURL","CardActions","files","size","disabled","formData","FormData","append","updateAvatar","removeAvatar","tableCell","large","textList","Profile","recently","setRecently","favorites","setFavorites","toWatch","setToWatch","upToDate","setUpToDate","stopped","setStopped","hours","days","months","episodesWatched","metrics","setMetrics","openAvatar","setOpenAvatar","getLists","listRecently","listFavorites","listToWatch","listUpToDate","listStopped","tvShowInfoDto","getMetrics","minWidth","float","List4TvShow","left","TextFieldClassic","borderBottomColor","WebkitTextFillColor","borderBottom","buttons","cssLabel","formControl","select","textarea","fill","useOutlinedInputStyles","focused","notchedOutline","edit","genders","countries","currentDate","today","dd","String","getDate","padStart","mm","getMonth","outlinedInputClasses","showInfo","setShowInfo","gender","country","birthday","facebook","instagram","twitter","reddit","errors","general","InputLabelProps","FormControl","InputLabel","Select","OutlinedInput","inputProps","g","c","about","TextareaAutosize","rowsMin","advanced","startAdornment","ToggleButtonGroup","exclusive","ToggleButton","ListTvShows","tvShowsList","setTvShowsList","typeList","ExploreTvShows","ClassicButton","axioas","params","part","maxResults","key","opacity","focusVisible","imageButton","right","bottom","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","black","imageTitle","imageMarked","IconContainer","other","customIcons","1","2","3","4","5","EpisodeDetails","episodeToProp","idTvShow","isStopped","isLastEpiosde","viewed","isViewed","watched","setWatched","rate","setRate","toFixed","ButtonBase","focusRipple","focusVisibleClassName","setWatchedEpiosde","backgroundImage","Rating","IconContainerComponent","newValue","parseInt","rateThisEp","ButtonClassic","options","disable","TvShowDetails","setTvshow","trailer","setTrailer","openEpisode","setOpenEpisode","viewedEpisodes","setViewedEpisodes","lastEpisodeId","setLastEpisodeId","expanded","setExpanded","openAddMenu","getActiveLists","lists","getViewdEpiosodes","getTrailer","youtube","q","items","videoId","handleCloseAddMenu","episodeId","getEpisodesBySeason","TableRow","TableCell","scope","isViewedBool","handleOpenEpisode","getAccordions","no","panel","episodesSeasons","filter","Accordion","isExpanded","AccordionSummary","expandIcon","heading","AccordionDetails","TableContainer","Table","TableHead","TableBody","option","tvShowToBack","addToList","removeFromList","indexOf","onAddSubmit","seasons","getSeaons","Search","getMatchs","text2","social","flexWrap","friendStatus","FriendProfile","setFriend","isFriend","setIsFriend","checkFriend","checkIsAccepted","friendId","isAccepted","sentRequest","unfriendRequest","paddingTop","direction","favorite","time","comment","spoiler","Comments","comments","setComments","likedComments","setLikedComments","setContent","setComment","getComments","getLikedComments","timePosted","diffTime","diffTimeMinutes","round","diffTimeHours","diffTimeDays","timeAgo","postComment","comm","idComment","getTime","postDate","getTimezoneOffset","wrap","commId","deleteAllReports","removeComment","onDeleteComment","DeleteForever","handleMenuOpen","isSpoiler","commentsAux","commentSpoiler","onClickSpoiler","Divider","likes","find","likeComment","onClickLikeComment","dislikeComment","onClickDislikeComment","spoilerComment","deleteComment","REPORT_TYPE","Report","reportType","report","setReport","getComment","x","commentId","reportToCreate","submitReport","resize","ListReportsAdminFirstPage","reports","setReports","viewAll","setViewAll","getReports","r","sentDate","ReportAdmin","viewComment","setViewComment","getReport","markReport","commentReported","userReported","onClickExport","fileType","responseType","typeForBlob","blob","Blob","saveAs","exportReport","onDeleteReport","onClickDelete","GUEST_URLS","INDEX_TYPE","App","session","removeItem","logoutUser","document","path","render","exact","CommentsAdmin","pathname","EditProfile","url","defaultRouteGuest","interceptors","request","use","basicToken","Promise","reject","ReactDOM","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.93eeca9f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport * as SockJS from \"sockjs-client\";\nimport * as Stomp from \"stompjs\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst AdminNavBar = ({ logout }) => {\n  const [message, setMessage] = useState(\"\");\n  const [newComment, setNewComment] = useState(false);\n  const [register, setRegister] = useState(\"\");\n  const [newRegister, setNewRegister] = useState(false);\n\n  useEffect(() => {\n    const connect = () => {\n      const URL = \"http://localhost:8080/socket\";\n      const websocket = new SockJS(URL);\n      const stompClient = Stomp.over(websocket);\n      stompClient.connect({}, (frame) => {\n        stompClient.subscribe(\"/topic/socket/user/comments\", (notification) => {\n          let message = notification.body;\n          setMessage(message);\n          setNewComment(true);\n        });\n        stompClient.subscribe(\"/topic/socket/user/register\", (notification) => {\n          let message = notification.body;\n          setRegister(message);\n          setNewRegister(true);\n        });\n      });\n    };\n    connect();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"ui secondary pointing large menu\">\n      <Link to=\"/\" className=\"item\">\n          Reports\n        </Link>\n        <Link to=\"/admin/users\" className=\"item\">\n          All Users\n        </Link>\n        <Link to=\"/admin/tvshows/view\" className=\"item\">\n          View TV Shows\n        </Link>\n        <Link to=\"/admin/tvshows/add\" className=\"item\">\n          Add TV Shows\n        </Link>\n        <Link to=\"/\" className=\"right item\" onClick={logout}>\n          Logout\n        </Link>\n      </div>\n      <br />\n      <Snackbar open={newComment} autoHideDuration={6000} onClose={() => setNewComment(false)}>\n        <Alert onClose={() => setNewComment(false)} severity=\"info\">{message}</Alert>\n      </Snackbar>\n      <Snackbar open={newRegister} autoHideDuration={6000} onClose={() => setNewRegister(false)}>\n        <Alert onClose={() => setNewRegister(false)} severity=\"warning\">{register}</Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default AdminNavBar;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/TST\",\n  headers: {\n    post: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Headers\":\n        \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\",\n    },\n  },\n});\n","import React from \"react\";\n\nconst DeleteUser = ({ user, cancelDelete, deleteUser }) => {\n  return (\n    <div className=\"ui segment\">\n      <div className=\"ui popout\">\n        <div className=\"ui items\">\n          <div className=\"item\">\n            <h3 className=\"header center\">\n              Are you sure you want to delele {user.username} ?\n            </h3>\n          </div>\n        </div>\n        <div className=\"ui two bottom attached buttons\">\n          <div className=\"ui green button\" onClick={deleteUser}>\n            <i className=\"x icon\"></i>\n            Confirm\n          </div>\n          <div className=\"ui red button\" onClick={cancelDelete}>\n            <i className=\"x icon\"></i>\n            Cancel\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteUser;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport backend from \"../../apis/backend\";\nimport DeleteUser from \"./DeleteUser\";\n\nconst RenderUsers = () => {\n  const [users, setUsers] = useState({ list: [], seletedUser: null });\n  const [deleteUser, setDeleteUser] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n\n  useEffect(() => {\n    getUsers();\n  }, [refresh]);\n\n  const getUsers = async () => {\n    try {\n      const response = await backend.get(\"/basic-user/view\");\n      setUsers({ list: response.data });\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  const handleInputChange = (user) => {\n    setDeleteUser(false);\n    var seletedUser = null;\n    if (user !== users.seletedUser) {\n      seletedUser = user;\n    }\n    setUsers({ list: users.list, seletedUser: seletedUser });\n  };\n\n  const renderedList = () => {\n    if (users.list.length !== 0) {\n      return users.list.map((user) => {\n        var isActive = \"False\";\n        if (user.isActive) {\n          isActive = \"True\";\n        }\n        var isLogin = \"False\";\n        if (user.authSession.isActive) {\n          isLogin = \"True\";\n        }\n        return (\n          <tr key={user.id}>\n            <td className=\"collapsing\">\n              <div className=\"ui fitted slider check checkbox\">\n                <input\n                  type=\"checkbox\"\n                  checked={user === users.seletedUser ? true : false}\n                  onChange={() => handleInputChange(user)}\n                />\n                <label></label>\n              </div>\n            </td>\n            <td>{user.username}</td>\n            <td>{user.email}</td>\n            <td>{isActive}</td>\n            <td>{user.role}</td>\n            <td>{user.dateJoined}</td>\n            <td>{isLogin}</td>\n            <td>{user.authSession.dateLastLogin}</td>\n            <td>{user.authSession.isActive ? \"\" : user.authSession.dateLastLogout}</td>\n          </tr>\n        );\n      });\n    }\n    return null;\n  };\n\n  const onCancel = () => {\n    setDeleteUser(false);\n    setUsers({ list: users.list, seletedUser: null });\n  };\n\n  const confirmDeleteUser = async () => {\n    onCancel();\n    try {\n      await backend.delete(`/basic-user/${users.seletedUser.id}/delete`);\n    } catch (error) {\n      console.log(error.response);\n    }\n    setRefresh(!refresh);\n  };\n  return (\n    <div>\n      <table className=\"ui compact celled definition table\">\n        <thead className=\"full-width\">\n          <tr>\n            <th></th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Active account</th>\n            <th>Role</th>\n            <th>Date Joined</th>\n            <th>Active session</th>\n            <th>Last login</th>\n            <th>Last logout</th>\n          </tr>\n        </thead>\n        <tbody>{renderedList()}</tbody>\n        <tfoot className=\"full-width\">\n          <tr>\n            <th colSpan=\"9\">\n              <Link to=\"/admin/users/add\">\n                <div className=\"ui right floated small primary labeled icon button\">\n                  <i className=\"user icon\" />\n                  Add User\n                </div>\n              </Link>\n              {users.seletedUser !== undefined && users.seletedUser !== null ? (\n                <div>\n                  <div\n                    className=\"ui small red button\"\n                    onClick={() => setDeleteUser(true)}\n                  >\n                    Delete User\n                  </div>\n                  <Link to={`/admin/users/update/${users.seletedUser.id}`}>\n                    <div className=\"ui small black button\">Edit User</div>\n                  </Link>\n                </div>\n              ) : null}\n            </th>\n          </tr>\n        </tfoot>\n      </table>\n      {deleteUser ? (\n        <DeleteUser\n          user={users.seletedUser}\n          cancelDelete={onCancel}\n          deleteUser={confirmDeleteUser}\n        />\n      ) : null}\n      <br/>\n    </div>\n  );\n};\n\nexport default RenderUsers;\n","import React, { useState } from \"react\";\nimport backend from \"../../apis/backend\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst roles = [\n  {\n    label: \"Admin\",\n    value: \"ADMIN\",\n  },\n  {\n    label: \"User\",\n    value: \"USER\",\n  },\n];\n\nconst AddUser = () => {\n  const [newUser, setNewUser] = useState({\n    username: \"\",\n    email: \"\",\n    role: roles[1].value,\n    isActive: false,\n    password: \"\",\n  });\n  const [backdrop, setBackdrop] = useState(false);\n\n  const onChangeForm = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    setNewUser({\n      ...newUser,\n      [name]: value,\n    });\n  };\n\n  const onFormSubmit = async (e) => {\n    e.preventDefault();\n    setBackdrop(true);\n    var userRole;\n    if (newUser.role === \"ADMIN\") {\n      userRole = \"admin\";\n    } else {\n      userRole = \"user\";\n    }\n    if (newUser.password.length < 8) {\n      alert(\"Password must have at least 8 characters\");\n      setBackdrop(false);\n      return;\n    }\n    await backend\n      .post(`/${userRole}/add`, newUser)\n      .then(() => {\n        setBackdrop(false);\n        alert(\"New \" + userRole + \" addeed\");\n        window.location.assign(\"/admin/users\");\n      })\n      .catch((err) => {\n        let error = err.response.data;\n        if (error.message.includes(\"Bad request\")) {\n          alert(\"Password must contains  at least 1 uppercase, 1 lowercase, 1 digit, 1 special character\")\n        }\n        else {\n          alert(error.message);\n        }\n        setBackdrop(false);\n      });\n  };\n\n  const renderedRoles = () => {\n    return roles.map((role) => {\n      return (\n        <option key={role.value} value={role.value}>\n          {role.label}\n        </option>\n      );\n    });\n  };\n\n  return (\n    <React.Fragment>\n      {backdrop ? (\n        <Backdrop\n          open={backdrop}\n          style={{\n            color: \"#fff\",\n          }}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      ) : (\n        <form className=\"ui form\" onSubmit={onFormSubmit}>\n          <div className=\"field\">\n            <label>Username</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"username\"\n              name=\"username\"\n              placeholder=\"Username\"\n              required\n              value={newUser.username}\n              onChange={onChangeForm}\n            />\n          </div>\n          <div className=\"field\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              required\n              value={newUser.email}\n              onChange={onChangeForm}\n            />\n          </div>\n          <div className=\"field\">\n            <label>Role</label>\n            <select\n              className=\"ui dropdown\"\n              name=\"role\"\n              value={newUser.role}\n              onChange={onChangeForm}\n            >\n              {renderedRoles()}\n            </select>\n          </div>\n          <div className=\"field\">\n            <div className=\"ui toggle checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"isActive\"\n                name=\"isActive\"\n                checked={newUser.isActive}\n                onChange={onChangeForm}\n              />\n              <label>Active</label>\n            </div>\n          </div>\n          <div className=\"field\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              required\n              value={newUser.password}\n              onChange={onChangeForm}\n            />\n          </div>\n          <button type=\"submit\" className=\"fluid green ui button\">\n            Add\n          </button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default AddUser;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport backend from \"../../apis/backend\";\n\nconst EditUser = () => {\n  const { id } = useParams();\n  const [user, setUser] = useState({\n    username: \"\",\n    email: \"\",\n    isActive: false,\n  });\n  const [updatedUser, setUpdatedUser] = useState({\n    username: \"\",\n    email: \"\",\n    isActive: false,\n  });\n\n  useEffect(() => {\n    const getUser = async () => {\n      try {\n        const response = await backend.get(`/basic-user/${id}`);\n        setUser(response.data);\n        setUpdatedUser(response.data);\n      } catch (error) {\n        console.log(error.response);\n      }\n    };\n\n    getUser();\n  }, [id]);\n\n  const onChangeForm = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    setUpdatedUser({\n      ...updatedUser,\n      [name]: value,\n    });\n  };\n\n  const onFormSubmit = async () => {\n    try {\n      await backend.put(`/basic-user/${id}/edit`, updatedUser);\n    } catch {\n      alert(\"Username/Email already exists\");\n    }\n  };\n\n  return (\n    <form className=\"ui form\" onSubmit={onFormSubmit}>\n      <div className=\"field\">\n        <label>Username</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"username\"\n          name=\"username\"\n          value={updatedUser.username}\n          required\n          onChange={onChangeForm}\n        />\n      </div>\n      <div className=\"field\">\n        <label>Email</label>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          id=\"email\"\n          name=\"email\"\n          value={updatedUser.email}\n          required\n          onChange={onChangeForm}\n        />\n      </div>\n      <div className=\"field\">\n        <div className=\"ui toggle checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"isActive\"\n            name=\"isActive\"\n            checked={updatedUser.isActive}\n            onChange={onChangeForm}\n          />\n          <label>Active</label>\n        </div>\n      </div>\n      {JSON.stringify(user) !== JSON.stringify(updatedUser) ? (\n        <div>\n          <button type=\"submit\" className=\"fluid green ui button\">\n            Save\n          </button>\n        </div>\n      ) : null}\n    </form>\n  );\n};\n\nexport default EditUser;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport backend from \"../../apis/backend\";\n\nconst ViewTvShows = () => {\n  const [tvShows, setTvShows] = useState([]);\n\n  const getTvShows = async () => {\n    try {\n      const response = await backend.get(\"/tv-show/view\");\n      setTvShows(response.data);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  useEffect(() => {\n    getTvShows();\n  }, []);\n\n  const renderedList = () => {\n    if (tvShows.length === 0) return null;\n\n    return tvShows.map((show) => {\n      const status =\n        show.status === \"Returning Series\" ? \"warning\" : \"positive\";\n      return (\n        <tr key={show.id}>\n          <td>\n            <Link to={`/admin/tvshows/show/${show.id}`}>{show.name}</Link>\n          </td>\n          <td>{show.tmdbId}</td>\n          <td>{show.noOfSeasons}</td>\n          <td>{show.noOfEpisodes}</td>\n          <td className={status}>\n            {show.nextAirDate !== null ? (\n              <i className=\"attention icon\"></i>\n            ) : null}\n            {show.status}\n          </td>\n          <td>{show.nextAirDate}</td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <React.Fragment>\n    <table className=\"ui celled padded table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>TMDB ID</th>\n          <th>No. Seasons</th>\n          <th>No. Episodes</th>\n          <th>Status</th>\n          <th>Next Episode</th>\n        </tr>\n      </thead>\n      <tbody>{renderedList()}</tbody>\n    </table>\n    <br/>\n    </React.Fragment>\n  );\n};\n\nexport default ViewTvShows;\n","import axios from \"axios\";\n\nexport default axios.create({ baseURL: \"https://api.themoviedb.org/3\" });\n","import React, { useState } from \"react\";\n\nconst SearchBar = ({ labelText, onFormSubmit }) => {\n  const [term, setTerm] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    onFormSubmit(term);\n    setTerm(\"\");\n  };\n\n  return (\n    <div className=\"search-bar ui segment\">\n      <form className=\"ui form\" onSubmit={onSubmit}>\n        <div className=\"field\">\n          <label>{labelText}</label>\n          <input\n            type=\"text\"\n            value={term}\n            onChange={(e) => setTerm(e.target.value)}\n          />\n        </div>\n        <button\n          type=\"submit\"\n          onClick={onSubmit}\n          className=\"fluid grey ui button\"\n        >\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\n\nconst PopupTV = ({\n  image,\n  header,\n  content,\n  extrabtn,\n  msg,\n  togglePopout,\n  onAddEvent,\n}) => {\n  const renderedAddButton = () => {\n    if (extrabtn) {\n      return null;\n    }\n\n    return (\n      <div className=\"ui positive button\" onClick={onAddEvent}>\n        <i className=\"add icon\"></i>\n        Add\n      </div>\n    );\n  };\n\n  const renderedMsg = () => {\n    var typeMsg = \"yellow\";\n    if (extrabtn) typeMsg = \"red\";\n    return (\n      <div className={`ui ${typeMsg} message`}>\n        <div className=\"header\" style={{ textAlign: \"center\" }}>\n          {msg}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"ui segment\">\n      <div className=\"ui popout\">\n        <div className=\"ui items\">\n          <div className=\"item\">\n            <div className=\"image\">\n              <img alt=\"Not found\" src={image} widtg=\"200\" hight=\"200\" />\n            </div>\n            <div className=\"content\">\n              <h3 className=\"header\">{header}</h3>\n              <div className=\"meta\">\n                <span>Overview</span>\n              </div>\n              <div className=\"description\">\n                <p>{content}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        {renderedMsg()}\n        <div className=\"ui two bottom attached buttons\">\n          {renderedAddButton()}\n          <div className=\"ui red button\" onClick={togglePopout}>\n            <i className=\"x icon\"></i>\n            Cancel\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PopupTV;\n","import React, { useState } from \"react\";\nimport tmdb from \"../../apis/tmdb\";\nimport SearchBar from \"../../components/SearchBar\";\nimport PopupTV from \"./PopupTV\";\nimport backend from \"../../apis/backend\";\n\nconst KEY = \"340e6dcf860d1c30d2dbdf83219935f8\";\nconst URL_PHOTOS = \"https://www.themoviedb.org/t/p/original\";\nconst MSGS = [\"IN DATABASE\", \"NOT IN DATABASE\"];\n\nconst AddTvShows = () => {\n  const [popout, setPopout] = useState(false);\n  const [tvshow, setTvShow] = useState({\n    tmdbId: 0,\n    name: \"\",\n    genres: [],\n    posterPath: \"\",\n    noOfSeasons: 0,\n    noOfEpisodes: 0,\n    status: \"\",\n    overview: \"\",\n    networks: [],\n    episodeRunTime: 0,\n    firstAirDate: \"\",\n    lastAirDate: \"\",\n    nextAirDate: \"\",\n  });\n  const [episodes, setEpisodes] = useState(null);\n\n  const [inDatabase, setInDatabase] = useState({\n    isIn: false,\n    msg: MSGS[1],\n  });\n\n  const onSearchSubmit = async (idTv) => {\n    setInDatabase({\n      isIn: false,\n      msg: MSGS[1],\n    });\n\n    try {\n      const responseInDatabse = await backend.get(`/tv-show/add/check/${idTv}`);\n      setInDatabase({\n        isIn: true,\n        msg: MSGS[0],\n      });\n      setTvShow(responseInDatabse.data);\n    } catch (error) {\n      if (error.response.data.status === \"NOT_FOUND\") {\n        try {\n          const responseTvShows = await tmdb.get(`/tv/${idTv}?api_key=${KEY}`);\n          const episodesToBackend = [];\n\n          for (var i = 1; i <= responseTvShows.data.number_of_seasons; i++) {\n            try {\n              const season = await tmdb.get(\n                `/tv/${idTv}/season/${i}?api_key=${KEY}`\n              );\n              for (var j = 0; j < season.data.episodes.length; j++) {\n                var epData = season.data.episodes[j];\n                episodesToBackend.push({\n                  id: null,\n                  noSeason: epData.season_number,\n                  episodeNumber: epData.episode_number,\n                  name: epData.name,\n                  airDate: epData.air_date,\n                  overview: epData.overview,\n                  stillPath: `${URL_PHOTOS}${epData.still_path}`,\n                });\n              }\n            } catch (error) {\n              console.log(error.response);\n            }\n          }\n\n          const dataTvShow = responseTvShows.data;\n\n          setTvShow({\n            tmdbId: dataTvShow.id,\n            name: dataTvShow.name,\n            genres: dataTvShow.genres.map((genre) => {\n              return genre.name;\n            }),\n            posterPath: `${URL_PHOTOS}/${dataTvShow.poster_path}`,\n            noOfSeasons: dataTvShow.number_of_seasons,\n            noOfEpisodes: dataTvShow.number_of_episodes,\n            status: dataTvShow.status,\n            overview: dataTvShow.overview,\n            networks: dataTvShow.networks.map((network) => {\n              return network.name;\n            }),\n            episodeRunTime: Math.max(...dataTvShow.episode_run_time),\n            firstAirDate: dataTvShow.first_air_date,\n            lastAirDate: dataTvShow.last_air_date,\n            nextAirDate:\n              dataTvShow.next_episode_to_air !== null\n                ? dataTvShow.next_episode_to_air.air_date\n                : null,\n          });\n          setEpisodes(episodesToBackend);\n        } catch (error) {\n          console.log(error.response);\n        }\n      } else {\n        console.log(error.response);\n      }\n    }\n    setPopout(true);\n  };\n\n  const togglePopout = () => {\n    setPopout(!popout);\n  };\n\n  const addTvShow = async () => {\n    try {\n      await backend.post(\"/tv-show/add\", tvshow);\n      await backend.post(`/episode/add/tv-show/${tvshow.tmdbId}`, episodes);\n    } catch (error) {\n      console.log(error.response);\n    }\n    setPopout(false);\n  };\n\n  return (\n    <div>\n      <SearchBar\n        labelText=\"Add TV Show (Enter the ID - TMDB)\"\n        onFormSubmit={onSearchSubmit}\n      />\n      {popout ? (\n        <PopupTV\n          image={tvshow.posterPath}\n          header={`${tvshow.name} (First air date: ${tvshow.firstAirDate})`}\n          content={tvshow.overview}\n          extrabtn={inDatabase.isIn}\n          msg={inDatabase.msg}\n          togglePopout={togglePopout}\n          onAddEvent={addTvShow}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddTvShows;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect, useParams } from \"react-router-dom\";\nimport backend from \"../../apis/backend\";\n\nconst status = [\n  {\n    label: \"Returning Series\",\n    value: \"Returning Series\",\n  },\n  {\n    label: \"Ended\",\n    value: \"Ended\",\n  },\n];\n\nconst TvShow = () => {\n  const { id } = useParams();\n  const [isDelele, setIsDelete] = useState(false);\n  const [tvShow, setTvShow] = useState({\n    id: \"\",\n    tmdbId: \"\",\n    name: \"\",\n    genres: \"\",\n    posterPath: \"\",\n    noOfSeasons: \"\",\n    noOfEpisodes: \"\",\n    status: \"\",\n    overview: \"\",\n    networks: \"\",\n    episodeRunTime: \"\",\n    firstAirDate: \"\",\n    lastAirDate: \"\",\n    nextAirDate: \"\",\n    rating: \"\",\n  });\n\n  useEffect(() => {\n    const getTvShow = async () => {\n      try {\n        const response = await backend.get(`/tv-show/${id}`);\n        setTvShow(response.data);\n      } catch (error) {\n        if (error.response.data.status === \"NOT_FOUND\") {\n          setIsDelete(true);\n        }\n      }\n    };\n    getTvShow();\n  }, [id]);\n\n  const onChangeForm = (event) => {\n    const target = event.target;\n    const name = target.name;\n    var value;\n    if (name === \"genres\" || name === \"networks\") {\n      value = target.value.split(\",\");\n    } else {\n      value = target.value;\n    }\n    setTvShow({\n      ...tvShow,\n      [name]: value,\n    });\n  };\n\n  const renderedStatus = () => {\n    return status.map((s) => {\n      return (\n        <option key={s.value} value={s.value}>\n          {s.label}\n        </option>\n      );\n    });\n  };\n\n  const onFormSubmitUpdate = async () => {\n    if (tvShow.name === \"\") {\n      alert(\"Field 'Name' missing\");\n      return;\n    }\n    try {\n      await backend.put(`/tv-show/${tvShow.id}/edit`, tvShow);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n  const onFormSubmitDelete = async () => {\n    try {\n      await backend.delete(`/tv-show/${tvShow.id}/delete`);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {isDelele ? (\n        <Redirect to=\"/admin/tvshows/view\" />\n      ) : (\n        <form className=\"ui form\">\n          <div className=\"field\">\n            <label>TMDB ID</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"tmdbId\"\n              name=\"tmdbId\"\n              value={tvShow.tmdbId}\n              onChange={onChangeForm}\n              readOnly\n            />\n          </div>\n          <div className=\"field\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              name=\"name\"\n              value={tvShow.name}\n              onChange={onChangeForm}\n              required\n            />\n          </div>\n          <div className=\"field\">\n            <label>Genres</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"genres\"\n              name=\"genres\"\n              value={tvShow.genres}\n              onChange={onChangeForm}\n            />\n          </div>\n          <div className=\"field\">\n            <label>Poster path</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"posterPath\"\n              name=\"posterPath\"\n              value={tvShow.posterPath}\n              onChange={onChangeForm}\n            />\n          </div>\n          <div className=\"fields\">\n            <div className=\"six wide field\">\n              <label>No. of seasons</label>\n              <input\n                type=\"number\"\n                min=\"0\"\n                className=\"form-control\"\n                id=\"noOfSeasons\"\n                name=\"noOfSeasons\"\n                value={tvShow.noOfSeasons}\n                onChange={onChangeForm}\n              />\n            </div>\n            <div className=\"six wide field\">\n              <label>No. of episodes</label>\n              <input\n                type=\"number\"\n                min=\"0\"\n                className=\"form-control\"\n                id=\"noOfEpisodes\"\n                name=\"noOfEpisodes\"\n                value={tvShow.noOfEpisodes}\n                onChange={onChangeForm}\n              />\n            </div>\n            <div className=\"six wide field\">\n              <label>Status</label>\n              <select\n                className=\"ui dropdown\"\n                name=\"status\"\n                value={tvShow.status}\n                onChange={onChangeForm}\n              >\n                {renderedStatus()}\n              </select>\n            </div>\n          </div>\n          <div className=\"field\">\n            <label>\n              Overview\n              <textarea\n                id=\"overview\"\n                name=\"overview\"\n                value={tvShow.overview}\n                onChange={onChangeForm}\n              />\n            </label>\n          </div>\n          <div className=\"fields\">\n            <div className=\"eight wide field\">\n              <label>Rating</label>\n              <input\n                type=\"number\"\n                step=\"0.1\"\n                min=\"0\"\n                max=\"5\"\n                className=\"form-control\"\n                id=\"rating\"\n                name=\"rating\"\n                value={tvShow.rating}\n                readOnly\n              />\n            </div>\n            <div className=\"eight wide field\">\n              <label>Network</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"networks\"\n                name=\"networks\"\n                value={tvShow.networks}\n                onChange={onChangeForm}\n              />\n            </div>\n          </div>\n          <div className=\"fields\">\n            <div className=\"six wide field\">\n              <label>Episode Run Time</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"episodeRunTime\"\n                name=\"episodeRunTime\"\n                value={tvShow.episodeRunTime}\n                onChange={onChangeForm}\n              />\n            </div>\n            <div className=\"six wide field\">\n              <label>First Air Date</label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"firstAirDate\"\n                name=\"firstAirDate\"\n                value={tvShow.firstAirDate}\n                onChange={onChangeForm}\n              />\n            </div>\n            <div className=\"six wide field\">\n              <label>Next Air Date</label>\n              <input\n                type={tvShow.status === status[1].value ? \"text\" : \"date\"}\n                className=\"form-control\"\n                id=\"nextAirDate\"\n                name=\"nextAirDate\"\n                value={tvShow.nextAirDate === null ? \"\" : tvShow.nextAirDate}\n                onChange={onChangeForm}\n                readOnly={tvShow.status === status[1].value ? true : false}\n              />\n            </div>\n          </div>\n          <div className=\"ui buttons\">\n            <button type=\"submit\" className=\"ui positive button\" onClick={onFormSubmitUpdate}>\n              Save\n            </button>\n            <div className=\"or\" />\n            <button className=\"ui negative button\" onClick={onFormSubmitDelete}>\n              Delete\n            </button>\n          </div>\n          <Link to={`/admin/tvshows/show/${tvShow.id}/episodes`}>\n            <button type=\"submit\" className=\"ui right floated button\">\n              View Episodes\n            </button>\n          </Link>\n          <br />\n          <br />\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default TvShow;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport backend from \"../../apis/backend\";\n\nconst ViewEpisodes = () => {\n  const { id } = useParams();\n  const [episodes, setEpisodes] = useState([]);\n\n  useEffect(() => {\n    const getEpisodes = async () => {\n      try {\n        const response = await backend.get(`/episode/episodes/tv-show/${id}`);\n        setEpisodes(response.data);\n      } catch (error) {\n        console.log(error.response);\n      }\n    };\n\n    getEpisodes();\n  }, [id]);\n  const renderedList = () => {\n    if (episodes.length === 0) return null;\n\n    return episodes.map((ep) => {\n      return (\n        <tr key={ep.id}>\n          <td>{ep.noSeason}</td>\n          <td>{ep.episodeNumber}</td>\n          <td>\n            <Link to={`/admin/tvshows/show/${id}/episode/${ep.id}`}>\n              {ep.name}\n            </Link>\n          </td>\n          <td>{ep.airDate}</td>\n          <td>{ep.rating}</td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <Link to={`/admin/tvshows/show/${id}/add`}>\n        <div className=\"ui green button\">\n          Add new Episode\n        </div>\n      </Link>\n      <table className=\"ui celled padded table\">\n        <thead>\n          <tr>\n            <th>Season</th>\n            <th>No.</th>\n            <th>Name</th>\n            <th>Air Date</th>\n            <th>Rating</th>\n          </tr>\n        </thead>\n        <tbody>{renderedList()}</tbody>\n      </table>\n      <br />\n    </div>\n  );\n};\n\nexport default ViewEpisodes;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport backend from \"../../apis/backend\";\n\nconst Episode = () => {\n  const { idShow, idEpisode } = useParams();\n  const [episode, setEpisode] = useState({\n    id: \"\",\n    noSeason: \"\",\n    episodeNumber: \"\",\n    name: \"\",\n    airDate: \"\",\n    overview: \"\",\n    rating: \"\",\n    stillPath: \"\",\n  });\n\n  useEffect(() => {\n    const getEpisode = async () => {\n      try {\n        const response = await backend.get(`/episode/${idEpisode}`);\n        setEpisode(response.data);\n      } catch (error) {\n        console.log(error.response);\n      }\n    };\n    getEpisode();\n  }, [idEpisode]);\n\n  const onChangeForm = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setEpisode({ ...episode, [name]: value });\n  };\n\n  const onFormSubmit = async () => {\n    try {\n      await backend.put(`/episode/edit/${episode.id}`, episode);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  const onFormSubmitDelete = async () => {\n    try {\n      await backend.delete(`/episode/delete/${episode.id}`);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  return (\n    <div>\n      <form className=\"ui form\" onSubmit={onFormSubmit}>\n        <Link to={`/admin/tvshows/show/${idShow}/episodes`}>\n          <div className=\"ui button\">Back to episodes</div>\n        </Link>\n        <br />\n        <br />\n        <div className=\"fields\">\n          <div className=\"eight wide field\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              name=\"name\"\n              value={episode.name}\n              onChange={onChangeForm}\n              required\n            />\n          </div>\n          <div className=\"four wide field\">\n            <label>Season</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              className=\"form-control\"\n              id=\"noSeason\"\n              name=\"noSeason\"\n              value={episode.noSeason}\n              onChange={onChangeForm}\n            />\n          </div>\n          <div className=\"four wide field\">\n            <label>Episode</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              className=\"form-control\"\n              id=\"episodeNumber\"\n              name=\"episodeNumber\"\n              value={episode.episodeNumber}\n              onChange={onChangeForm}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label>Poster</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"stillPath\"\n            name=\"stillPath\"\n            value={episode.stillPath}\n            onChange={onChangeForm}\n          />\n        </div>\n        <div className=\"fields\">\n          <div className=\"eight wide field\">\n            <label>Air date</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"airDate\"\n              name=\"airDate\"\n              value={episode.airDate}\n              onChange={onChangeForm}\n            />\n          </div>\n          <div className=\"eight wide field\">\n            <label>Rating</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"0.1\"\n              className=\"form-control\"\n              id=\"rating\"\n              name=\"rating\"\n              value={episode.rating}\n              onChange={onChangeForm}\n              readOnly\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label>\n            Overview\n            <textarea\n              id=\"overview\"\n              name=\"overview\"\n              value={episode.overview}\n              onChange={onChangeForm}\n            />\n          </label>\n        </div>\n        <div className=\"ui buttons\">\n          <button type=\"submit\" className=\"ui positive button\">\n            Save\n          </button>\n          <div className=\"or\" />\n          <button className=\"ui negative button\" onClick={onFormSubmitDelete}>\n            Delete\n          </button>\n        </div>\n        <Link to={`/admin/tvshows/show/${idShow}/episode/${episode.id}/comments`}>\n            <div className=\"ui right floated button\">View comments</div>\n          </Link>\n      </form>\n    </div>\n  );\n};\n\nexport default Episode;\n","import React, { useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport backend from \"../../apis/backend\";\n\nconst AddEpisode = () => {\n  const { id } = useParams();\n  const [episode, setEpisode] = useState({\n    noSeason: \"\",\n    episodeNumber: \"\",\n    name: \"\",\n    airDate: \"\",\n    overview: \"\",\n    stillPath: \"\",\n  });\n\n  const onChangeForm = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setEpisode({ ...episode, [name]: value });\n  };\n\n  console.log(id)\n  const onFormSubmit = async () => {\n    try {\n        await backend.post(`/episode/add-one/tv-show/${id}`, episode);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  return (\n    <div>\n      <form className=\"ui form\" onSubmit={onFormSubmit}>\n        <Link to={`/admin/tvshows/show/${id}/episodes`} className=\"ui b\">\n          <div className=\"ui button\">Back to episodes</div>\n        </Link>\n        <br />\n        <br />\n        <div className=\"fields\">\n          <div className=\"eight wide field\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              name=\"name\"\n              value={episode.name}\n              onChange={onChangeForm}\n              required\n            />\n          </div>\n          <div className=\"four wide field\">\n            <label>Season</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              className=\"form-control\"\n              id=\"noSeason\"\n              name=\"noSeason\"\n              value={episode.noSeason}\n              onChange={onChangeForm}\n            />\n          </div>\n          <div className=\"four wide field\">\n            <label>Episode</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              className=\"form-control\"\n              id=\"episodeNumber\"\n              name=\"episodeNumber\"\n              value={episode.episodeNumber}\n              onChange={onChangeForm}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label>Poster</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"stillPath\"\n            name=\"stillPath\"\n            value={episode.stillPath}\n            onChange={onChangeForm}\n          />\n        </div>\n        <div className=\"fields\">\n          <div className=\"eight wide field\">\n            <label>Air date</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"airDate\"\n              name=\"airDate\"\n              value={episode.airDate}\n              onChange={onChangeForm}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label>\n            Overview\n            <textarea\n              id=\"overview\"\n              name=\"overview\"\n              value={episode.overview}\n              onChange={onChangeForm}\n            />\n          </label>\n        </div>\n        <button type=\"submit\" className=\"ui fluid positive button\">\n          Add\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddEpisode;\n","import { Link, withStyles } from \"@material-ui/core\";\n\nconst LinkClassic = withStyles({\n  root: {\n    color: \"#000\",\n    \"&:hover\": {\n      textDecoration: \"none\",\n      color: \"#000\",\n    },\n  },\n})(Link);\n\nexport default LinkClassic;\n","import React from \"react\";\r\n\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputRoot: {\r\n    color: \"#fff\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst SearchBarUser = ({ term, placeholder, onFormChange, onFormSubmit }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.search} onSubmit={onFormSubmit}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder={placeholder}\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={term}\r\n        onChange={onFormChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBarUser;\r\n","import { createMuiTheme } from \"@material-ui/core\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nexport default darkTheme;\n","import React from \"react\";\nimport {\n  makeStyles,\n  ThemeProvider,\n  Modal,\n  Backdrop,\n  Fade,\n} from \"@material-ui/core\";\nimport darkTheme from \"../components/Theme\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow:'scroll',\n\n  },\n  paperFade: {\n    position: \"absolute\",\n    top: \"10%\",\n    backgroundColor: \"#30302F\",\n    border: \"2px solid #fff\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst ModalOrg = ({ children, open, onClose }) => {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={onClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paperFade}>{children}</div>\n        </Fade>\n      </Modal>\n    </ThemeProvider>\n  );\n};\n\nexport default ModalOrg;\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport backend from \"../apis/backend\";\r\nimport LinkClassic from \"../components/links/LinkClassic\";\r\n\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { green, red } from \"@material-ui/core/colors\";\r\nimport SearchBarUser from \"../components/SearchBarUser\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n  },\r\n  text: {\r\n    color: \"#fff\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n  button2: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: red,\r\n    secondary: green,\r\n  },\r\n});\r\n\r\nconst Friends = ({ viewFriends, onChangeNotification }) => {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState(\"\");\r\n  const [friends, setFriends] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const id = localStorage.getItem(\"ID session\");\r\n\r\n  useEffect(() => {\r\n    const getFriends = async () => {\r\n      await backend\r\n        .get(`/friends/all-friends/${id}`)\r\n        .then((res) => setFriends(res.data))\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    const getRequests = async () => {\r\n      await backend\r\n        .get(`/friends/all-requests/${id}`)\r\n        .then((res) => setFriends(res.data))\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    if (viewFriends) getFriends();\r\n    else getRequests();\r\n  }, [id, refresh, viewFriends]);\r\n\r\n  const onFormChange = (event) => {\r\n    setUser(event.target.value);\r\n  };\r\n\r\n  const onFormSubmit = () => {\r\n    history.push(`/user/${user}`);\r\n  };\r\n\r\n  const onClickConfirm = (idFriend) => {\r\n    const confirmFriend = async () => {\r\n      let data = {\r\n        idFriend: idFriend,\r\n        idUser: id,\r\n      };\r\n      await backend\r\n        .put(\"/friends/accept\", data)\r\n        .catch((err) => console.log(err));\r\n      setRefresh(!refresh);\r\n    };\r\n    confirmFriend();\r\n    onChangeNotification();\r\n  };\r\n\r\n  const onClickReject = (idFriend) => {\r\n    const rejectFriend = async () => {\r\n      await backend\r\n        .delete(`/friends/reject/${id}/${idFriend}`)\r\n        .catch((err) => console.log(err));\r\n      setRefresh(!refresh);\r\n    };\r\n    rejectFriend();\r\n    onChangeNotification();\r\n  };\r\n\r\n  const onClickUnfriend = (idFriend) => {\r\n    const unfriend = async () => {\r\n      await backend\r\n        .delete(`/friends/unfriend/${id}/${idFriend}`)\r\n        .catch((err) => console.log(err));\r\n      setRefresh(!refresh);\r\n    };\r\n    unfriend();\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {viewFriends ?\r\n      <SearchBarUser\r\n        term={user}\r\n        placeholder=\"Search user\"\r\n        onFormChange={onFormChange}\r\n        onFormSubmit={onFormSubmit}\r\n      />: null}\r\n      <List dense className={classes.root}>\r\n        {friends.map((friend, index) => {\r\n          const labelId = `checkbox-list-secondary-label-${friend}`;\r\n          const friendData = friend.friend;\r\n          return (\r\n            <ListItem key={index}>\r\n              <ListItemAvatar>\r\n                <Avatar src={`http://localhost:8080/TST/user/avatar/${friendData.id}`}/>\r\n              </ListItemAvatar>\r\n              <ListItemText id={labelId} className={classes.text}>\r\n                <LinkClassic\r\n                  href={`/user/${friendData.username}`}\r\n                  style={{ color: \"white\" }}\r\n                >\r\n                  {friendData.displayName}\r\n                </LinkClassic>\r\n              </ListItemText>\r\n              <ThemeProvider theme={theme}>\r\n                {viewFriends ? (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick={() => onClickUnfriend(friendData.id)}\r\n                  >\r\n                    Unfriend\r\n                  </Button>\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.button}\r\n                      onClick={() => onClickConfirm(friendData.id)}\r\n                    >\r\n                      Confirm\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      className={classes.button2}\r\n                      onClick={() => onClickReject(friendData.id)}\r\n                    >\r\n                      Reject\r\n                    </Button>\r\n                  </React.Fragment>\r\n                )}\r\n              </ThemeProvider>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Friends;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport ExploreIcon from \"@material-ui/icons/Explore\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport LinkClassic from \"../components/links/LinkClassic\";\nimport SearchBarUser from \"../components/SearchBarUser\";\n\nimport * as SockJS from \"sockjs-client\";\nimport * as Stomp from \"stompjs\";\nimport backend from \"../apis/backend\";\nimport ModalOrg from \"../components/ModalOrg\";\nimport Friends from \"../users/Friends\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  bar: {\n    backgroundColor: \"#282828\",\n  },\n  explore: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n      fontFamily: \"ProximaNovaSB\",\n    },\n  },\n  sectionDesktop: {\n    display: \"none\",\n\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  exploreLabel: {\n    marginLeft: theme.spacing(1),\n    fontSize: \"1.2rem\",\n    fontFamily: \"ProximaNovaSB\",\n  },\n}));\n\nconst NavbarUser = ({ logout }) => {\n  const classes = useStyles();\n  const [tvShowName, setTvShowName] = useState(\"\");\n  const [notificationNo, setNotificationNo] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [openNotification, setOpenNotification] = useState(false);\n  const [messageNotification, setMessageNotification] = useState(\"\");\n  const idUser = localStorage.getItem(\"ID session\");\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);\n  \n  useEffect(() => {\n    const getRequests = async () => {\n      await backend\n        .get(`friends/all-requests/${idUser}`)\n        .then((res) => {\n          setNotificationNo(res.data.length);\n        })\n        .catch((err) => console.log(err.response));\n    };\n    const connect = () => {\n      const URL = \"http://localhost:8080/socket\";\n      const websocket = new SockJS(URL);\n      const stompClient = Stomp.over(websocket);\n      stompClient.connect({}, (frame) => {\n        stompClient.subscribe(\n          `/topic/socket/user/send-request/${idUser}`,\n          (notification) => {\n            let message = notification.body;\n            setMessageNotification(message);\n            setOpenNotification(true);\n            setNotificationNo(notificationNo + 1);           \n          }\n        );\n        stompClient.subscribe(\n          `/topic/socket/user/accept-request/${idUser}`,\n          (notification) => {\n            let message = notification.body;\n            setMessageNotification(message);\n            setOpenNotification(true);       \n          }\n        );\n      });\n    };\n    getRequests();\n    connect();\n  }, [idUser, notificationNo]);\n\n  const onChangeNotification = () => {\n    setNotificationNo(notificationNo - 1);\n  };\n\n  const isMenuOpen = Boolean(anchorEl);\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <LinkClassic href=\"/\">\n        <MenuItem\n          onClick={() => {\n            handleMenuClose();\n          }}\n        >\n          Profile\n        </MenuItem>\n      </LinkClassic>\n      <LinkClassic href=\"/profile/edit\">\n        <MenuItem\n          onClick={() => {\n            handleMenuClose();\n          }}\n        >\n          Edit\n        </MenuItem>\n      </LinkClassic>\n      <LinkClassic href=\"/report/bug\">\n        <MenuItem\n          onClick={() => {\n            handleMenuClose();\n          }}\n        >\n          Report bug\n        </MenuItem>\n      </LinkClassic>\n      <MenuItem\n        onClick={() => {\n          handleMenuClose();\n          logout();\n        }}\n      >\n        Log out\n      </MenuItem>\n    </Menu>\n  );\n\n  const onFormChange = (event) => {\n    setTvShowName(event.target.value);\n  };\n\n  const onFormSubmit = () => {\n    history.push(`/search/${tvShowName}`);\n  };\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" className={classes.bar}>\n        <Toolbar>\n          <LinkClassic href=\"/\" style={{ color: \"#fff\" }}>\n            <Typography className={classes.title} variant=\"h4\" noWrap>\n              TST\n            </Typography>\n          </LinkClassic>\n          <SearchBarUser\n            term={tvShowName}\n            placeholder=\"Search...\"\n            onFormChange={onFormChange}\n            onFormSubmit={onFormSubmit}\n          />\n          <LinkClassic href=\"/tv-shows/explore\" style={{ color: \"#fff\" }}>\n            <IconButton className={classes.explore} color=\"inherit\">\n              <ExploreIcon fontSize=\"large\" />\n              <Typography className={classes.exploreLabel} noWrap>\n                Explore\n              </Typography>\n            </IconButton>\n          </LinkClassic>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton\n              aria-label=\"show new notifications\"\n              color=\"inherit\"\n              onClick={() => {\n                if (notificationNo !== 0) setOpen(true);\n              }}\n            >\n              <Badge badgeContent={notificationNo} color=\"secondary\">\n                <NotificationsIcon fontSize=\"large\" />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle fontSize=\"large\" />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {open ? (\n        <ModalOrg\n          open={open}\n          onClose={() => {\n            setOpen(false);          \n          }}\n          children={<Friends viewFriends={false} onChangeNotification={onChangeNotification} />}\n        />\n      ) : null}\n      <Snackbar open={openNotification} autoHideDuration={6000} onClose={() => setOpenNotification(false)}>\n        <Alert onClose={() => setOpenNotification(false)} severity=\"info\">{messageNotification}</Alert>\n      </Snackbar>\n      {renderMenu}\n    </div>\n  );\n};\n\nexport default NavbarUser;\n","import React from \"react\";\nimport { makeStyles, CardContent, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    maxWidth: \"400px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\nconst TvShowInfo = ({ tvshow }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.details}>\n      <CardContent className={classes.content}>\n        <Typography component=\"h5\" variant=\"h5\">\n          {tvshow.name} ({tvshow.noOfSeasons} seasons / {tvshow.noOfEpisodes}{\" \"}\n          episodes)\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          {tvshow.genres.join(\", \")}\n        </Typography>\n      </CardContent>\n      <div className={classes.controls}>{tvshow.overview}</div>\n    </div>\n  );\n};\n\nexport default TvShowInfo;\n","import { withStyles } from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n\nconst InfoIconOrg = withStyles({\n  root: {\n    \"&:hover\": {\n      color: \"#ffa25f\",\n    },\n  },\n})(InfoIcon);\n\nexport default InfoIconOrg;\n","import { Link, withStyles } from \"@material-ui/core\";\n\nconst LinkOrg = withStyles({\n  root: {\n    color: \"#fff\",\n    \"&:hover\": {\n      textDecoration: \"none\",\n      color: \"#ffa25f\",\n    },\n  },\n})(Link);\n\nexport default LinkOrg;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport LinkOrg from \"./links/LinkOrg\";\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" align=\"center\" style={{ color: \"#fff\" }}>\n      {\"Copyright © \"}\n      <LinkOrg color=\"inherit\" href=\"http://localhost:3000/\">\n        TST\n      </LinkOrg>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nexport default Copyright;\n","import { TextField, withStyles } from \"@material-ui/core\";\n\nconst TextFieldOrg = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"#ffa25f\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#fff\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#ffa25f\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#ffa25f\",\n      },\n    },\n    \"& .MuiOutlinedInput-input:-webkit-autofill\": {\n      WebkitBoxShadow: \"0 0 0 100px #424242 inset\",\n    },\n  },\n})(TextField);\n\nexport default TextFieldOrg;\n","import { withStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nconst ColorButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(\"#ffa25f\"),\n    backgroundColor: \"#ffa25f\",\n    \"&:hover\": {\n      backgroundColor: \"#ffa25f\",\n    },\n    fontSize: \"1.0rem\",\n  },\n}))(Button);\n\nexport default ColorButton;\n","import React, { useState } from \"react\";\r\n\r\nimport backend from \"../apis/backend\";\r\n\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  Grid,\r\n  Avatar,\r\n  Box,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nimport LinkOrg from \"../components/links/LinkOrg\";\r\nimport Copyright from \"../components/Copyright\";\r\nimport TextFieldOrg from \"../components/texts/TextFieldOrg\";\r\nimport ButtonOrg from \"../components/buttons/ButtonOrg\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    margin: theme.spacing(12, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#ffa25f\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = ({ signUp, forgetPassword }) => {\r\n  const classes = useStyles();\r\n  const [userRequest, setUserRequets] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [visibility, setVisibilty] = useState(false);\r\n\r\n  const onFormChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n\r\n    setUserRequets({\r\n      ...userRequest,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const acitivateSession = ({ id, role }) => {\r\n    localStorage.setItem(\"ID session\", id.toString());\r\n    localStorage.setItem(\"User\", role.toString());\r\n    localStorage.setItem(\"token\", \"Basic \" + btoa(userRequest.username + ':' + userRequest.password));\r\n    window.location.reload();\r\n  };\r\n\r\n  const onFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await backend\r\n      .post(\"/basic-user/login\", userRequest)\r\n      .then((res) => {\r\n        const data = res.data;\r\n        acitivateSession({ id: data.id, role: data.role });\r\n      })\r\n      .catch((err) => alert(err.response.data.message));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <Avatar className={classes.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Log in\r\n      </Typography>\r\n      <form className={classes.form} onSubmit={onFormSubmit}>\r\n        <TextFieldOrg\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"username\"\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          value={userRequest.username}\r\n          onChange={onFormChange}\r\n        />\r\n        <TextFieldOrg\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type={!visibility ? \"password\" : \"text\"}\r\n          id=\"password\"\r\n          value={userRequest.password}\r\n          onChange={onFormChange}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={() => setVisibilty(!visibility)}\r\n                >\r\n                  {visibility ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <ButtonOrg\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          className={classes.submit}\r\n        >\r\n          Log In\r\n        </ButtonOrg>\r\n      </form>\r\n      <Grid container>\r\n        <Grid item xs>\r\n          <LinkOrg component=\"button\"\r\n            variant=\"body2\"\r\n            color=\"inherit\"\r\n            onClick={forgetPassword}>\r\n            Forgot password?\r\n          </LinkOrg>\r\n        </Grid>\r\n        <Grid item>\r\n          <LinkOrg\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            color=\"inherit\"\r\n            onClick={signUp}\r\n          >\r\n            {\"Don't have an account? Sign Up\"}\r\n          </LinkOrg>\r\n        </Grid>\r\n      </Grid>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\nimport backend from \"../apis/backend\";\nimport { useHistory } from \"react-router\";\n\nimport {\n  Typography,\n  makeStyles,\n  Grid,\n  Avatar,\n  Box,\n  InputAdornment,\n  IconButton,\n} from \"@material-ui/core\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\n\nimport TextFieldOrg from \"../components/texts/TextFieldOrg\";\nimport ButtonOrg from \"../components/buttons/ButtonOrg\";\nimport LinkOrg from \"../components/links/LinkOrg\";\nimport Copyright from \"../components/Copyright\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#ffa25f\",\n  },\n  form: {\n    width: \"100%\", \n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nconst SignUp = ({ login }) => {\n  const [newUser, setNewUser] = useState({\n    username: \"\",\n    email: \"\",\n    role: \"USER\",\n    password: \"\",\n  });\n  const [confirmPass, setConfirmPass] = useState(\"\");\n  const [visibility, setVisibilty] = useState(false);\n  const [backdrop, setBackdrop] = useState(false);\n  const classes = useStyles();\n  const history = useHistory();\n\n  const onFormChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n\n    if (name === \"confirmPassword\") {\n      setConfirmPass(value);\n    } else {\n      setNewUser({\n        ...newUser,\n        [name]: value,\n      });\n    }\n  };\n\n  const onFormSubmit = async (e) => {\n    e.preventDefault();\n    if (newUser.password !== confirmPass) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    if (newUser.password.length < 8) {\n      alert(\"Password must have at least 8 characters\");\n      return;\n    }\n    setBackdrop(true);\n    await backend\n      .post(\"/user/add\", newUser)\n      .then(() => {\n        setBackdrop(false);\n        history.goBack(2);\n      })\n      .catch((err) => {\n        let error = err.response.data;\n        if (error.message.includes(\"Bad request\")) {\n          alert(\n            \"Password must contains  at least 1 uppercase, 1 lowercase, 1 digit, 1 special character\"\n          );\n        } else {\n          alert(error.message);\n        }\n        setBackdrop(false);\n      });\n  };\n  return (\n    <React.Fragment>\n      {backdrop ? (\n        <Backdrop\n          className={classes.backdrop}\n          open={backdrop}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      ) : (\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <PersonAddIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.form} onSubmit={onFormSubmit}>\n            <Grid container spacing={2}>\n              <TextFieldOrg\n                className={classes.field}\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                value={newUser.username}\n                onChange={onFormChange}\n              />\n              <TextFieldOrg\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                value={newUser.email}\n                onChange={onFormChange}\n              />\n              <TextFieldOrg\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"password\"\n                label=\"Password\"\n                name=\"password\"\n                type={!visibility ? \"password\" : \"text\"}\n                value={newUser.password}\n                onChange={onFormChange}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={() => setVisibilty(!visibility)}\n                      >\n                        {\" \"}\n                        {visibility ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <TextFieldOrg\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"confirmPassword\"\n                label=\"Confirm password\"\n                name=\"confirmPassword\"\n                type={!visibility ? \"password\" : \"text\"}\n                value={newUser.confirmPassword}\n                onChange={onFormChange}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={() => setVisibilty(!visibility)}\n                      >\n                        {\" \"}\n                        {visibility ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <ButtonOrg\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                className={classes.submit}\n              >\n                Sing Up\n              </ButtonOrg>\n            </Grid>\n          </form>\n          <Grid container>\n            <Grid item>\n              <LinkOrg\n                component=\"button\"\n                variant=\"body2\"\n                color=\"inherit\"\n                onClick={login}\n              >\n                {\"Already have an account? Log in\"}\n              </LinkOrg>\n            </Grid>\n          </Grid>\n          <Box mt={5}>\n            <Copyright />\n          </Box>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default SignUp;\n","import React, { useState } from \"react\";\r\nimport backend from \"../apis/backend\";\r\n\r\nimport { Typography, makeStyles, Grid, Avatar, Box } from \"@material-ui/core\";\r\n\r\nimport LinkOrg from \"../components/links/LinkOrg\";\r\nimport Copyright from \"../components/Copyright\";\r\nimport TextFieldOrg from \"../components/texts/TextFieldOrg\";\r\nimport ButtonOrg from \"../components/buttons/ButtonOrg\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    margin: theme.spacing(20, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#ffa25f\",\r\n  },\r\n  form: {\r\n    width: \"100%\", \r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst ForgetPassword = ({ forgetPassword }) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [backdrop, setBackdrop] = useState(false);\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const resetPasswordRequest = async () => {\r\n      setBackdrop(true);\r\n      await backend\r\n        .post(`/reset-password?email=${email}`)\r\n        .then(() => {\r\n          setBackdrop(false);\r\n          alert(\"Email sent\");\r\n          forgetPassword();\r\n        })\r\n        .catch(() => {\r\n          setBackdrop(false);\r\n          alert(\r\n            \"Something went wrong.\\nPlease, contact us at tvshowstracker2021@gmail.com\"\r\n          );\r\n        });\r\n    };\r\n    resetPasswordRequest();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {backdrop ? (\r\n        <Backdrop className={classes.backdrop} open={backdrop}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      ) : (\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <DraftsIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Forget password?\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={onFormSubmit}>\r\n            <TextFieldOrg\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Your email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <ButtonOrg\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              className={classes.submit}\r\n            >\r\n              Reset password\r\n            </ButtonOrg>\r\n          </form>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <LinkOrg\r\n                component=\"button\"\r\n                variant=\"body2\"\r\n                color=\"inherit\"\r\n                onClick={forgetPassword}\r\n              >\r\n                {\"Missclick? Go to first page\"}\r\n              </LinkOrg>\r\n            </Grid>\r\n          </Grid>\r\n          <Box mt={5}>\r\n            <Copyright />\r\n          </Box>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport backend from \"../apis/backend\";\r\n\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  Avatar,\r\n  Box,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport Copyright from \"../components/Copyright\";\r\nimport TextFieldOrg from \"../components/texts/TextFieldOrg\";\r\nimport ButtonOrg from \"../components/buttons/ButtonOrg\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    margin: theme.spacing(20, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#ffa25f\",\r\n  },\r\n  form: {\r\n    width: \"100%\", \r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst ChangePassword = ({ changePassword }) => {\r\n  const classes = useStyles();\r\n  const token = useParams();\r\n  const [newPassword, setNewPassword] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [isErrToken, setIsErrToken] = useState(false);\r\n  const [visibility, setVisibilty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const validateToken = async () => {\r\n      await backend\r\n        .get(`/user/change-password?token=${token.token}`)\r\n        .then((res) =>\r\n          setNewPassword({\r\n            username: res.data,\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n          })\r\n        )\r\n        .catch((err) => {\r\n          alert(err.response.data.message);\r\n          setIsErrToken(true);\r\n        });\r\n    };\r\n    validateToken();\r\n  }, [token]);\r\n\r\n  const onFormChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n\r\n    setNewPassword({\r\n      ...newPassword,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const setNewPassword = async () => {\r\n      let data = {\r\n        username: newPassword.username,\r\n        password: newPassword.password,\r\n      };\r\n      await backend.put(\"/user/set-new-password\", data)\r\n      .then(() => {\r\n          alert(\"New password set\");\r\n          changePassword();\r\n      })\r\n      .catch(err => {\r\n        alert(err.response.data.message);\r\n    })\r\n    };\r\n    if (newPassword.password !== newPassword.confirmPassword) {\r\n        alert(\"Passwords do not match\");\r\n    } else {\r\n        setNewPassword();\r\n    }\r\n  };\r\n\r\n  if (isErrToken) {\r\n    changePassword();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <Avatar className={classes.avatar}>\r\n        <LockOpenIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Forget password?\r\n      </Typography>\r\n      <form className={classes.form} onSubmit={onFormSubmit}>\r\n        <TextFieldOrg\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"password\"\r\n          label=\"New password\"\r\n          name=\"password\"\r\n          type={!visibility ? \"password\" : \"text\"}\r\n          value={newPassword.password}\r\n          onChange={onFormChange}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={() => setVisibilty(!visibility)}\r\n                >\r\n                  {\" \"}\r\n                  {visibility ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <TextFieldOrg\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"confirmPassword\"\r\n          label=\"Confirm new password\"\r\n          name=\"confirmPassword\"\r\n          type={!visibility ? \"password\" : \"text\"}\r\n          value={newPassword.confirmPassword}\r\n          onChange={onFormChange}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={() => setVisibilty(!visibility)}\r\n                >\r\n                  {\" \"}\r\n                  {visibility ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <ButtonOrg\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          className={classes.submit}\r\n        >\r\n          Reset password\r\n        </ButtonOrg>\r\n      </form>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport backend from \"../apis/backend\";\nimport TvShowInfo from \"./TvShowInfo\";\n\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { CssBaseline, makeStyles, Grid, Paper } from \"@material-ui/core\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport darkTheme from \"../components/Theme\";\nimport InfoIconOrg from \"../components/icons/InfoIconOrg\";\nimport ModalOrg from \"../components/ModalOrg\";\n\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\nimport ForgetPassword from \"./ForgetPassword\";\nimport ChangePassword from \"./ChangePassword\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n}));\n\nconst IndexPage = ({ indexType, typeSelected }) => {\n  const history = useHistory();\n\n  const [posters, setPosters] = useState([]);\n  const [openInfo, setOpenInfo] = useState(false);\n  const [tvShowInfo, setTvShowInfo] = useState(null);\n  const classes = useStyles();\n\n  useEffect(() => {\n    const getPosters = async () => {\n      await backend\n        .get(\"/tv-show/posters\")\n        .then((res) => setPosters(res.data))\n        .catch((err) => console.log(err.response));\n    };\n    getPosters();\n  }, []);\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <Grid container component=\"main\" className={classes.root}>\n        <Grid item xs={false} sm={2} md={7}>\n          <GridList cellHeight={380} cols={4} spacing={0}>\n            {posters.map((tile) => (\n              <GridListTile key={tile.id}>\n                <img src={tile.posterPath} alt={tile.id} />\n                <GridListTileBar\n                  title={tile.name}\n                  actionIcon={\n                    <IconButton\n                      className={classes.icon}\n                      onClick={() => {\n                        setTvShowInfo(tile);\n                        setOpenInfo(true);\n                      }}\n                    >\n                      <InfoIconOrg />\n                    </IconButton>\n                  }\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        </Grid>\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6}>\n          {typeSelected === indexType[0] ? (\n            <Login\n              signUp={() => {\n                history.push(\"/register\");\n              }}\n              forgetPassword={() => {\n                history.push(\"/forget-password\");\n              }}\n            />\n          ) : typeSelected === indexType[1] ? (\n            <SignUp\n              login={() => {\n                history.goBack();\n              }}\n            />\n          ) : typeSelected === indexType[2] ? (\n            <ForgetPassword\n              forgetPassword={() => {\n                history.goBack();\n              }}\n            />\n          ) : (\n            <ChangePassword\n              changePassword={() => {\n                window.location.assign(\"/\");\n              }}\n            />\n          )}\n        </Grid>\n      </Grid>\n      {openInfo === true ? (\n        <ModalOrg\n          classes={classes}\n          open={openInfo}\n          onClose={() => setOpenInfo(false)}\n          children={<TvShowInfo tvshow={tvShowInfo} />}\n        />\n      ) : null}\n    </ThemeProvider>\n  );\n};\n\nexport default IndexPage;\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nimport LinkClassic from  '../../components/links/LinkClassic';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justify: \"flex-end\",\r\n    overflow: \"hidden\",\r\n  },\r\n  icon: {\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst List4TvShows = ({ tvShows }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container className={classes.root}>\r\n        <GridList\r\n          cellHeight={300}\r\n          className={classes.gridList}\r\n          cols={tvShows.length}\r\n          spacing={20}\r\n        >\r\n          {tvShows.map((tvShow) => (\r\n            <GridListTile key={tvShow.id}>\r\n              <img\r\n                src={tvShow.posterPath}\r\n                alt={tvShow.id}\r\n                height=\"280\"\r\n                width=\"215\"\r\n              />\r\n              <GridListTileBar\r\n                title={tvShow.name}\r\n                subtitle={tvShow.noOfSeasons + \" seasons / \" + tvShow.status}\r\n                actionIcon={\r\n                  <LinkClassic href={`/tv-show/${tvShow.id}`}>\r\n                  <IconButton\r\n                    className={classes.icon}\r\n                  >\r\n                    <VisibilityIcon />\r\n                  </IconButton>\r\n                  </LinkClassic>\r\n                }\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default List4TvShows;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport backend from \"../apis/backend\";\r\n\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 300,\r\n    backgroundColor: \"#424242\",\r\n  },\r\n  media: {\r\n    height: 300,\r\n  },\r\n});\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: red,\r\n    secondary: green,\r\n  },\r\n});\r\n\r\nconst AvatarProfile = () => {\r\n  const classes = useStyles();\r\n  const id = localStorage.getItem(\"ID session\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [isAvatar, setIsAvatar] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getAvatar = async () => {\r\n      await backend\r\n        .get(`http://localhost:8080/TST/user/avatar/${id}`)\r\n        .then((res) => {\r\n            if (res.data !== \"\") setIsAvatar(true);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n    getAvatar();\r\n  }, [id]);\r\n\r\n  const selectFile = (e) => {\r\n    setAvatar(e.target.files);\r\n  };\r\n\r\n  const onUpdateAvatar = () => {\r\n    const updateAvatar = async () => {\r\n      let formData = new FormData();\r\n      formData.append(\"avatar\", avatar[0]);\r\n\r\n      await backend\r\n        .post(`/user/upload-avatar/${id}`, formData)\r\n        .catch((err) => console.log(err));\r\n    };\r\n    updateAvatar();\r\n    window.location.reload();\r\n  };\r\n\r\n  const onRemoveAvatar = () => {\r\n    const removeAvatar = async () => {\r\n\r\n      await backend\r\n        .delete(`/user/delete-avatar/${id}`)\r\n        .catch((err) => console.log(err));\r\n    };\r\n    removeAvatar();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {avatar !== \"\" ? (\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={URL.createObjectURL(avatar[0])}\r\n        />\r\n      ) : null}\r\n      <CardActions>\r\n        <input type=\"file\" onChange={selectFile} style={{ color: \"white\" }} />\r\n      </CardActions>\r\n      <CardActions>\r\n        <ThemeProvider theme={theme}>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            size=\"small\"\r\n            disabled={avatar === \"\"}\r\n            onClick={onUpdateAvatar}\r\n          >\r\n            Upload\r\n          </Button>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            size=\"small\"\r\n            disabled={!isAvatar}\r\n            onClick={onRemoveAvatar}\r\n          >\r\n            Remove avatar\r\n          </Button>\r\n        </ThemeProvider>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AvatarProfile;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport backend from \"../apis/backend\";\nimport Friends from \"./Friends\";\n\nimport {\n  Avatar,\n  Box,\n  Grid,\n  Typography,\n  Paper,\n  Button,\n  IconButton,\n  Modal,\n} from \"@material-ui/core\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List4TvShows from \"./tvshows/List4TvShow\";\nimport ModalOrg from \"../components/ModalOrg\";\nimport AvatarProfile from \"./AvatarProfile\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    backgroundColor: \"#424242\",\n    color: \"#fff\",\n    border: \"1px solid #696969\",\n  },\n  text: {\n    fontFamily: \"ProximaNova\",\n    color: \"#fff\",\n    paddingLeft: theme.spacing(1),\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  tableCell: {\n    color: \"#fff\",\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  textList: {\n    color: \"#fff\",\n    paddingLeft: theme.spacing(1),\n  },\n}));\n\nconst Profile = () => {\n  const classes = useStyles();\n  const [user, setUser] = useState({\n    displayName: \"\",\n  });\n  const [recently, setRecently] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [toWatch, setToWatch] = useState([]);\n  const [upToDate, setUpToDate] = useState([]);\n  const [stopped, setStopped] = useState([]);\n  const [metrics, setMetrics] = useState({\n    hours: 0,\n    days: 0,\n    months: 0,\n    episodesWatched: 0,\n  });\n  const [open, setOpen] = useState(false);\n  const [openAvatar, setOpenAvatar] = useState(false);\n  const history = useHistory();\n\n  const id = localStorage.getItem(\"ID session\");\n\n  \n  useEffect(() => {\n    const getUser = async () => {\n      await backend\n        .get(`/user/profile/${id}`)\n        .then((res) => {\n          setUser(res.data);\n        })\n        .catch((err) => {\n          console.log(err.response);\n        });\n    };\n  \n    const getLists = async () => {\n      await backend\n        .get(`/lists/only-four-tv-show/${id}`)\n        .then((res) => {\n          const data = res.data;\n          let listRecently = [];\n          let listFavorites = [];\n          let listToWatch = [];\n          let listUpToDate = [];\n          let listStopped = [];\n          for (let i = 0; i < data.length; i++) {\n            if (data[i].type === \"RECENTLY_WATCHED\") {\n              listRecently.push(data[i].tvShowInfoDto);\n            }\n            if (data[i].type === \"FAVORITES\") {\n              listFavorites.push(data[i].tvShowInfoDto);\n            }\n            if (data[i].type === \"TO_WATCH\") {\n              listToWatch.push(data[i].tvShowInfoDto);\n            }\n            if (data[i].type === \"UP_TO_DATE\") {\n              listUpToDate.push(data[i].tvShowInfoDto);\n            }\n            if (data[i].type === \"STOPPED\") {\n              listStopped.push(data[i].tvShowInfoDto);\n            }\n          }\n          setRecently(listRecently);\n          setFavorites(listFavorites);\n          setToWatch(listToWatch);\n          setUpToDate(listUpToDate);\n          setStopped(listStopped);\n        })\n        .catch((err) => {\n          console.log(err.response);\n        });\n    };\n    const getMetrics = async () => {\n      await backend\n        .get(`/episode-viewed/get-metrics/${id}`)\n        .then((res) => setMetrics(res.data))\n        .catch((err) => console.log(err));\n    };\n    getUser();\n    getLists();\n    getMetrics();\n  }, [id]);\n\n  const renderLists = () => {\n    const lists = [\n      {\n        label: \"RECENTLY WATCHED\",\n        value: \"recently-watched\",\n        tvShows: recently,\n      },\n      {\n        label: \"FAVORITES \",\n        value: \"favorites\",\n        tvShows: favorites,\n      },\n      {\n        label: \"TO WATCH\",\n        value: \"to-watch\",\n        tvShows: toWatch,\n      },\n      {\n        label: \"UP TO DATE / FINISHED\",\n        value: \"up-to-date\",\n        tvShows: upToDate,\n      },\n      {\n        label: \"STOPPED\",\n        value: \"stopped\",\n        tvShows: stopped,\n      },\n    ];\n    return lists.map((list) => {\n      return (\n        <Grid item xs={12} key={list.label}>\n          <Paper className={classes.paper}>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Box margin={1}>\n                <Typography style={{ textAlign: \"left\", minWidth: \"150px\" }}>\n                  {list.label}\n                </Typography>\n              </Box>\n              {list.tvShows.length !== 0 &&\n              list.value !== \"recently-watched\" ? (\n                <Box width=\"100%\">\n                  <Button\n                    onClick={() => history.push(`/list/${list.value}/${id}`)}\n                    style={{ color: \"#fff\", float: \"right\" }}\n                  >\n                    See all\n                  </Button>\n                </Box>\n              ) : null}\n            </Box>\n            <Box width=\"100%\">\n              <List4TvShows tvShows={list.tvShows} />\n            </Box>\n          </Paper>\n        </Grid>\n      );\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Box>\n                {\" \"}\n                <IconButton onClick={() => setOpenAvatar(true)}>\n                  <Avatar\n                    alt=\"\"\n                    src={`http://localhost:8080/TST/user/avatar/${id}`}\n                    className={classes.large}\n                  />\n                </IconButton>\n              </Box>\n              <Box width=\"100%\">\n                <Typography\n                  className={classes.text}\n                  component=\"h5\"\n                  variant=\"h5\"\n                  style={{ textAlign: \"left\" }}\n                >\n                  {\" \"}\n                  {user.displayName}\n                </Typography>\n              </Box>\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Box width=\"100%\" margin={1.4}>\n                <Typography\n                  className={classes.text}\n                  component=\"h5\"\n                  variant=\"h5\"\n                  style={{ textAlign: \"center\" }}\n                >\n                  {\" \"}\n                  My TV time\n                </Typography>\n              </Box>\n            </Box>\n            <Typography\n              className={classes.text}\n              variant=\"subtitle1\"\n              style={{ textAlign: \"center\", fontSize: \"1.2rem\" }}\n            >\n              {\" \"}\n              {metrics.months} months {metrics.days} days {metrics.hours} hours\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Box width=\"100%\" margin={1.4}>\n                <Typography\n                  className={classes.text}\n                  component=\"h5\"\n                  variant=\"h5\"\n                  style={{ textAlign: \"center\" }}\n                >\n                  {\" \"}\n                  Episodes watched\n                </Typography>\n              </Box>\n            </Box>\n            <Typography\n              className={classes.text}\n              style={{ textAlign: \"center\", fontSize: \"1.2rem\" }}\n            >\n              {\" \"}\n              {metrics.episodesWatched}\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Box margin={1.4}>\n                {\" \"}\n                <IconButton\n                  onClick={() => setOpen(true)}\n                  style={{ color: \"#fff\" }}\n                >\n                  {\" \"}\n                  <PeopleAltIcon fontSize=\"large\" />\n                </IconButton>\n              </Box>\n              <Box width=\"100%\">\n                <Typography\n                  className={classes.text}\n                  component=\"h5\"\n                  variant=\"h5\"\n                  style={{ textAlign: \"left\" }}\n                >\n                  {\" \"}\n                  Friends\n                </Typography>\n              </Box>\n            </Box>\n          </Paper>\n        </Grid>\n        {renderLists()}\n      </Grid>\n      {open ? (\n        <ModalOrg\n          open={open}\n          onClose={() => setOpen(false)}\n          children={<Friends viewFriends={true}/>}\n        />\n      ) : null}\n      {openAvatar ? (\n        <Modal\n          open={openAvatar}\n          onClose={() => setOpenAvatar(false)}\n          style={{ position: \"absolute\", top: \"20%\", left: \"40%\" }}\n        >\n          <div>\n            <AvatarProfile />\n          </div>\n        </Modal>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Profile;\n","import { TextField, withStyles } from \"@material-ui/core\";\n\nconst TextFieldClassic = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"#fff\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"#fff\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"white\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#fff\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#fff\",\n      },\n    },\n    \"& .MuiOutlinedInput-input:-webkit-autofill\": {\n      WebkitTextFillColor: \"#fff\",\n      WebkitBoxShadow: \"0 0 0 100px #424242 inset\",\n    },\n  },\n})(TextField);\n\nexport default TextFieldClassic;\n","import React, { useState, useEffect } from \"react\";\nimport backend from \"../apis/backend\";\n\nimport {\n  Container,\n  makeStyles,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  InputAdornment,\n  TextareaAutosize,\n  OutlinedInput,\n} from \"@material-ui/core\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport RedditIcon from \"@material-ui/icons/Reddit\";\n\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport TextFieldClassic from \"../components/texts/TextFieldClassic\";\nimport ButtonOrg from \"../components/buttons/ButtonOrg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    top: \"18%\",\n    left: \"32%\",\n    border: \"solid 1px #696969\",\n  },\n  paper: {\n    margin: theme.spacing(1, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  title: {\n    backgroundColor: \"#585858\",\n    height: \"40px\",\n    fontSize: \"16px\",\n    color: \"#fff\",\n    borderBottom: \"2px solid #696969\",\n    padding: \"8px 10px\",\n  },\n  buttons: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"absolute\",\n    top: \"12%\",\n    left: \"32%\",\n    \"& .MuiToggleButton-root.Mui-selected\": {\n      color: \"#000\",\n      backgroundColor: \"#fff\",\n    },\n  },\n  button: {\n    border: \"solid 2px #696969\",\n    color: \"#fff\",\n  },\n  form: {\n    width: \"100%\", \n    marginTop: theme.spacing(1),\n  },\n  cssLabel: {\n    color: \"#fff\",\n    \"&.Mui-focused\": {\n      color: \"#fff\",\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    left: \"-1.5%\",\n  },\n  select: {\n    \"&:before\": {\n      color: \"#fff\",\n      borderColor: \"#fff\",\n    },\n    \"&:after\": {\n      borderColor: \"#fff\",\n    },\n  },\n  textarea: {\n    color: \"#fff\",\n    backgroundColor: \"#424242\",\n    border: \"1px solid #696969\",\n    margin: theme.spacing(2),\n    width: \"99.8%\",\n    position: \"relative\",\n    left: \"-3.3%\",\n  },\n  icon: {\n    fill: \"#fff\",\n  },\n}));\n\nconst useOutlinedInputStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiOutlinedInput-input\": {\n      color: \"#fff\",\n    },\n    \"& $notchedOutline\": {\n      borderColor: \"#fff\",\n    },\n    \"&:hover $notchedOutline\": {\n      borderColor: \"#fff\",\n    },\n    \"&$focused $notchedOutline\": {\n      borderColor: \"#fff\",\n    },\n  },\n  focused: {},\n  notchedOutline: {},\n}));\n\nconst edit = [\n  { value: \"general\", label: \"General\" },\n  { value: \"about\", label: \"About me\" },\n  { value: \"advanced\", label: \"Advanced\" },\n];\n\nconst genders = [\n  {\n    label: \"Female\",\n    value: \"Famele\",\n  },\n  {\n    label: \"Male\",\n    value: \"Male\",\n  },\n  {\n    label: \"Other\",\n    value: \"Other\",\n  },\n];\n\nconst countries = [\"United States\", \"Romania\"];\n\nconst currentDate = () => {\n  var today = new Date();\n  var dd = String(today.getDate()).padStart(2, \"0\");\n  var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n  var yyyy = today.getFullYear();\n\n  return yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nconst EditUser = () => {\n  const classes = useStyles();\n  const outlinedInputClasses = useOutlinedInputStyles();\n  const [showInfo, setShowInfo] = useState(edit[0]);\n  const [user, setUser] = useState({\n    username: \"\",\n    email: \"\",\n    displayName: \"\",\n    gender: \"\",\n    country: \"\",\n    birthday: \"\",\n    facebook: \"\",\n    instagram: \"\",\n    twitter: \"\",\n    reddit: \"\",\n  });\n\n  useEffect(() => {\n    const getUser = async () => {\n      await backend\n        .get(`/user/get/${localStorage.getItem(\"ID session\")}`)\n        .then((res) => {\n          setUser(res.data);\n        })\n        .catch((err) => {\n          console.log(err.response);\n        });\n    };\n    getUser();\n  }, []);\n\n  const onFormChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n\n    setUser({\n      ...user,\n      [name]: value,\n    });\n  };\n\n  const onFormSubmit = async (e) => {\n    e.preventDefault();\n    await backend\n      .put(`user/edit/${localStorage.getItem(\"ID session\")}`, user)\n      .then(() => window.location.reload())\n      .catch((err) => {\n        console.log(err.response);\n        alert(err.response.data.errors);\n      });\n  };\n\n  const renderedGenders = () => {\n    return genders.map((g) => {\n      return (\n        <MenuItem key={g.value} value={g.value}>\n          {g.label}\n        </MenuItem>\n      );\n    });\n  };\n\n  const renderedCountries = () => {\n    return countries.map((c) => {\n      return (\n        <MenuItem key={c} value={c}>\n          {c}\n        </MenuItem>\n      );\n    });\n  };\n\n  const general = (\n    <React.Fragment>\n      <TextFieldClassic\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        name=\"username\"\n        label=\"Username\"\n        type=\"text\"\n        id=\"username\"\n        focused\n        required\n        value={user.username}\n        onChange={onFormChange}\n        InputProps={{ className: classes.cssLabel }}\n        InputLabelProps={{ className: classes.cssLabel }}\n      ></TextFieldClassic>\n      <TextFieldClassic\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        focused\n        name=\"email\"\n        label=\"Email\"\n        type=\"email\"\n        id=\"email\"\n        required\n        value={user.email}\n        onChange={onFormChange}\n        InputProps={{ className: classes.cssLabel }}\n        InputLabelProps={{ className: classes.cssLabel }}\n      ></TextFieldClassic>\n      <TextFieldClassic\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        name=\"displayName\"\n        label=\"Display name\"\n        type=\"text\"\n        focused\n        id=\"displayName\"\n        required\n        value={user.displayName}\n        onChange={onFormChange}\n        InputProps={{ className: classes.cssLabel }}\n        InputLabelProps={{ className: classes.cssLabel }}\n      ></TextFieldClassic>\n      <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n        <InputLabel style={{ color: \"#fff\" }}>Gender</InputLabel>\n        <Select\n          value={user.gender !== null ? user.gender : \"\"}\n          onChange={onFormChange}\n          input={\n            <OutlinedInput\n              label=\"Gender\"\n              name=\"gender\"\n              id=\"gender\"\n              classes={outlinedInputClasses}\n            />\n          }\n          inputProps={{\n            classes: {\n              icon: classes.icon,\n            },\n          }}\n        >\n          <MenuItem value=\"\" disabled>\n            <em>None</em>\n          </MenuItem>\n          {renderedGenders()}\n        </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n        <InputLabel style={{ color: \"#fff\" }}>Country</InputLabel>\n        <Select\n          value={user.country !== null ? user.country : \"\"}\n          onChange={onFormChange}\n          input={\n            <OutlinedInput\n              label=\"Country\"\n              name=\"country\"\n              id=\"country\"\n              classes={outlinedInputClasses}\n            />\n          }\n          inputProps={{\n            classes: {\n              icon: classes.icon,\n            },\n          }}\n        >\n          <MenuItem value=\"\" disabled>\n            <em>None</em>\n          </MenuItem>\n          {renderedCountries()}\n        </Select>\n      </FormControl>\n      <TextFieldClassic\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        label=\"Birthday\"\n        name=\"birthday\"\n        type=\"date\"\n        id=\"birthday\"\n        value={user.birthday !== null ? user.birthday : \"\"}\n        focused\n        inputProps={{ max: currentDate() }}\n        onChange={onFormChange}\n        InputProps={{\n          className: classes.cssLabel,\n        }}\n      ></TextFieldClassic>\n      <br />\n      <br />\n    </React.Fragment>\n  );\n  const about = (\n    <TextareaAutosize\n      className={classes.textarea}\n      rowsMin={10}\n      id=\"about\"\n      name=\"about\"\n      value={user.about !== null ? user.about : \"\"}\n      onChange={onFormChange}\n    />\n  );\n\n  const advanced = (\n    <React.Fragment>\n      <TextFieldClassic\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        name=\"facebook\"\n        label=\"Facebook\"\n        type=\"text\"\n        id=\"facebook\"\n        value={user.facebook !== null ? user.facebook : \"\"}\n        onChange={onFormChange}\n        InputProps={{\n          className: classes.cssLabel,\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <FacebookIcon />\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{ className: classes.cssLabel }}\n      ></TextFieldClassic>\n      <TextFieldClassic\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        name=\"instagram\"\n        label=\"Instagram\"\n        type=\"text\"\n        id=\"instagram\"\n        value={user.instagram !== null ? user.instagram : \"\"}\n        onChange={onFormChange}\n        InputProps={{\n          className: classes.cssLabel,\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <InstagramIcon />\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{ className: classes.cssLabel }}\n      ></TextFieldClassic>\n      <TextFieldClassic\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        name=\"twitter\"\n        label=\"Twitter\"\n        type=\"text\"\n        id=\"twitter\"\n        value={user.twitter !== null ? user.twitter : \"\"}\n        onChange={onFormChange}\n        InputProps={{\n          className: classes.cssLabel,\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <TwitterIcon />\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{ className: classes.cssLabel }}\n      ></TextFieldClassic>\n      <TextFieldClassic\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        name=\"reddit\"\n        label=\"Reddit\"\n        type=\"text\"\n        id=\"reddit\"\n        value={user.reddit !== null ? user.reddit : \"\"}\n        onChange={onFormChange}\n        InputProps={{\n          className: classes.cssLabel,\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <RedditIcon />\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{ className: classes.cssLabel }}\n      ></TextFieldClassic>\n      <br />\n      <br />\n    </React.Fragment>\n  );\n\n  const renderedToggleButton = () => {\n    return edit.map((e) => {\n      return (\n        <ToggleButton\n          key={e.value}\n          value={e.value}\n          className={classes.button}\n          onClick={() => setShowInfo(e)}\n        >\n          {e.label}\n        </ToggleButton>\n      );\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.buttons}>\n        <ToggleButtonGroup size=\"small\" value={showInfo.value} exclusive>\n          {renderedToggleButton()}\n        </ToggleButtonGroup>\n      </div>\n      <Container maxWidth=\"sm\" className={classes.root}>\n        <div className={classes.paper}>\n          <Container maxWidth=\"sm\" className={classes.title}>\n            {showInfo.label}\n          </Container>\n          <form className={classes.form} onSubmit={onFormSubmit}>\n            {showInfo.value === \"general\"\n              ? general\n              : showInfo.value === \"about\"\n              ? about\n              : advanced}\n            <ButtonOrg type=\"submit\" fullWidth variant=\"contained\">\n              Save\n            </ButtonOrg>\n          </form>\n        </div>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default EditUser;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport backend from \"../apis/backend\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport Container from \"@material-ui/core/Container\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport LinkClassic from './links/LinkClassic';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n  },\n  gridList: {\n    position: \"absolute\",\n    width: \"90%\",\n    top: \"12%\",\n  },\n  icon: {\n    color: \"#fff\",\n  },\n}));\n\nconst ListTvShows = ({ tvShows }) => {\n  const classes = useStyles();\n  const [tvShowsList, setTvShowsList] = useState([]);\n  const { type, id } = useParams();\n\n  useEffect(() => {\n    const getTvShows = async () => {\n      let typeList;\n      if (type === '\"recently-watched') typeList = 'RECENTLY_WATCHED'; \n      else if (type === 'favorites') typeList = 'FAVORITES';\n      else if (type === 'to-watch') typeList = 'TO_WATCH';\n      else if (type === 'stopped') typeList = 'STOPPED';\n      const response = await backend.get(`/lists/all-tv-show/${typeList}/${id}`);\n      const data = response.data;\n      let list = [];\n      for (var i = 0; i < data.length; i++) {\n        list.push(data[i].tvShowInfoDto);\n      }\n      setTvShowsList(list);\n    };\n    if (tvShows !== undefined) {\n      setTvShowsList(tvShows);\n    } else {\n      getTvShows();\n    }\n  }, [tvShows, type, id]);\n\n  return (\n    <React.Fragment>\n      <Container className={classes.root}>\n        <GridList\n          cellHeight={300}\n          className={classes.gridList}\n          cols={6}\n          spacing={20}\n        >\n          {tvShowsList.map((tvShow) => (\n            <GridListTile key={tvShow.id}>\n              <img\n                src={tvShow.posterPath}\n                alt={tvShow.id}\n                height=\"280\"\n                width=\"215\"\n              />\n              <GridListTileBar\n                title={tvShow.name}\n                subtitle={tvShow.noOfSeasons + \" seasons / \" + tvShow.status}\n                actionIcon={\n                  <LinkClassic href={`/tv-show/${tvShow.id}`}>\n                  <IconButton\n                    className={classes.icon}\n                  >\n                    <VisibilityIcon />\n                  </IconButton>\n                  </LinkClassic>\n                }\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default ListTvShows;\n","import React, { useState, useEffect } from \"react\";\nimport backend from \"../../apis/backend\";\n\nimport ListTvShows from \"../../components/ListTvShows\";\n\nconst ExploreTvShows = () => {\n  const [tvShows, setTvShows] = useState([]);\n\n  useEffect(() => {\n    const getTvShows = async () => {\n      await backend.get(\"/tv-show/info\")\n      .then(res => {\n        setTvShows(res.data);\n      })\n      .catch(err => {\n        console.log(err.response);\n      });      \n    };\n    getTvShows();\n  }, []);\n\n  return <ListTvShows tvShows={tvShows} />\n};\n\nexport default ExploreTvShows;\n","import { withStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nconst ClassicButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(\"#fff\"),\n    backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n    },\n    fontSize: \"0.7rem\",\n  },\n}))(Button);\n\nexport default ClassicButton;\n","import axioas from \"axios\";\n\nconst KEY = \"AIzaSyA9EMMnCT7UAhmZM9R3PqOrp1SjyNAwhJk\";\n\nexport default axioas.create({\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\n  params: {\n    part: \"snippet\",\n    maxResults: 1,\n    type: \"video\",\n    key: KEY,\n  },\n});\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport {\n  makeStyles,\n  CardContent,\n  Typography,\n  ButtonBase,\n} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport SentimentDissatisfiedIcon from \"@material-ui/icons/SentimentDissatisfied\";\nimport SentimentSatisfiedIcon from \"@material-ui/icons/SentimentSatisfied\";\nimport SentimentSatisfiedAltIcon from \"@material-ui/icons/SentimentSatisfiedAltOutlined\";\nimport SentimentVerySatisfiedIcon from \"@material-ui/icons/SentimentVerySatisfied\";\n\nimport ButtonClassic from \"../../components/buttons/ButtonClassic\";\nimport backend from \"../../apis/backend\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    color: \"#fff\",\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    color: \"#fff\",\n    maxWidth: \"650px\",\n    paddingLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(1),\n  },\n  image: {\n    position: \"relative\",\n    \"&:hover, &$focusVisible\": {\n      zIndex: 1,\n      \"& $imageBackdrop\": {\n        opacity: 0.15,\n      },\n      \"& $imageMarked\": {\n        opacity: 0,\n      },\n      \"& $imageTitle\": {\n        border: \"4px solid currentColor\",\n      },\n    },\n  },\n  focusVisible: {},\n  imageButton: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: theme.palette.common.white,\n  },\n  imageSrc: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center 40%\",\n  },\n  imageBackdrop: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create(\"opacity\"),\n  },\n  imageTitle: {\n    position: \"relative\",\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\n      theme.spacing(1) + 6\n    }px`,\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: \"absolute\",\n    bottom: -2,\n    left: \"calc(50% - 9px)\",\n    transition: theme.transitions.create(\"opacity\"),\n  },\n  button: {\n    textAlign: \"center\",\n  },\n}));\n\nfunction IconContainer(props) {\n  const { value, ...other } = props;\n  return <span {...other}>{customIcons[value].icon}</span>;\n}\n\nconst customIcons = {\n  1: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: \"Very Dissatisfied\",\n  },\n  2: {\n    icon: <SentimentDissatisfiedIcon />,\n    label: \"Dissatisfied\",\n  },\n  3: {\n    icon: <SentimentSatisfiedIcon />,\n    label: \"Neutral\",\n  },\n  4: {\n    icon: <SentimentSatisfiedAltIcon />,\n    label: \"Satisfied\",\n  },\n  5: {\n    icon: <SentimentVerySatisfiedIcon />,\n    label: \"Very Satisfied\",\n  },\n};\n\nconst EpisodeDetails = ({ episodeToProp, idTvShow, isStopped, isLastEpiosde }) => {\n  const classes = useStyles();\n  const episode = episodeToProp.ep;\n  const [watched, setWatched] = useState(episodeToProp.viewed.isViewed);\n  const [rate, setRate] = useState(episodeToProp.viewed.rating);\n  const idUser = localStorage.getItem(\"ID session\");\n  const history = useHistory();\n \n  const onClickChange = () => {\n    const setWatchedEpiosde = async () => {\n      if (!watched) {\n        let data = {\n          idUser: idUser,\n          idEpisode: episode.id,\n          rating: 0,\n        };\n        // marcam episodul\n        await backend.post(\"/episode-viewed/add\", data).catch(err => console.log(err.response));\n        // reluare serial\n        if (isStopped) {\n          await backend.delete(\n            `/lists/remove-from-list/STOPPED/${idTvShow}/${idUser}`\n          ).catch(err => console.log(err.response));\n          await backend.post(\"/lists/add-to-list\", {\n            type: \"TO_WATCH\",\n            idUser: idUser,\n            idTvShow: idTvShow,\n          }).catch(err => console.log(err.response));\n        }\n        // recently watched \n        let list = {\n          type: \"RECENTLY_WATCHED\",\n          idUser: idUser,\n          idTvShow: idTvShow,\n        };\n        await backend.post(\"/lists/add-to-list\", list).catch(err => console.log(err.response));\n        // last episode\n        if (isLastEpiosde) {\n          await backend.delete(\n            `/lists/remove-from-list/TO_WATCH/${idTvShow}/${idUser}`\n          ).catch(err => console.log(err.response));\n          await backend.post(\"/lists/add-to-list\", {\n            type: \"UP_TO_DATE\",\n            idUser: idUser,\n            idTvShow: idTvShow,\n          }).catch(err => console.log(err.response));\n        }\n      } else {\n        await backend.delete(`/episode-viewed/delete/${idUser}/${episode.id}`).catch(err => console.log(err.response));\n        await backend.delete(\n          `/lists/remove-from-list/RECENTLY_WATCHED/${idTvShow}/${idUser}`\n        ).catch(err => console.log(err.response));\n        if (isLastEpiosde) {\n          await backend.delete(\n            `/lists/remove-from-list/UP_TO_DATE/${idTvShow}/${idUser}`\n          ).catch(err => console.log(err.response));\n          await backend.post(\"/lists/add-to-list\", {\n            type: \"TO_WATCH\",\n            idUser: idUser,\n            idTvShow: idTvShow,\n          }).catch(err => console.log(err.response));\n        }\n      }\n    };\n    setWatchedEpiosde();\n    setWatched(!watched);\n  };\n\n  const onChangeRating = (event) => {\n    const newValue = parseInt(event.target.value);\n    const rateThisEp = async () => {\n      let data = {\n        idUser: idUser,\n        idEpisode: episode.id,\n        rating: newValue,\n      };\n      await backend.put(\"/episode-viewed/rate\", data).catch(err => console.log(err.response));\n    };\n    rateThisEp();\n    setRate(newValue);\n  };\n\n  return (\n    <div className={classes.details}>\n      <CardContent className={classes.content}>\n        <Typography component=\"h5\" variant=\"h5\">\n          {episode.name}\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Season: {episode.noSeason} / Episode: {episode.episodeNumber} /\n          Airdate: {episode.airDate} / Rating: {episode.rating.toFixed(1)}\n        </Typography>\n        <ButtonBase\n          focusRipple\n          className={classes.image}\n          focusVisibleClassName={classes.focusVisible}\n          style={{\n            width: \"600px\",\n            height: \"350px\",\n          }}\n          onClick={onClickChange}\n        >\n          <span\n            className={classes.imageSrc}\n            style={{\n              backgroundImage: `url(${episode.stillPath})`,\n            }}\n          />\n          <span className={classes.imageBackdrop} />\n          <span className={classes.imageButton}>\n            <Typography\n              component=\"span\"\n              variant=\"subtitle1\"\n              color=\"inherit\"\n              className={classes.imageTitle}\n            >\n              Watched{watched === true ? \"!\" : \"?\"}\n              <span className={classes.imageMarked} />\n            </Typography>\n          </span>\n        </ButtonBase>\n      </CardContent>\n      <div className={classes.controls}>{episode.overview}</div>\n      {watched === true ? (\n        <div>\n          <Box component=\"fieldset\" borderColor=\"transparent\">\n            <Typography component=\"legend\" style={{ color: \"#fff\" }}>\n              How was it?\n            </Typography>\n            <Rating\n              name=\"customized-icons\"\n              IconContainerComponent={IconContainer}\n              value={rate}\n              onChange={onChangeRating}\n            />\n          </Box>\n          <div className={classes.button}>\n            <ButtonClassic onClick={() => {\n              history.push(`/episode/${episode.id}/comments`);\n            }}>Display comments</ButtonClassic>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default EpisodeDetails;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  makeStyles,\n  Typography,\n  Paper,\n  Modal,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableContainer,\n  Button,\n} from \"@material-ui/core\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport ClassicButton from \"../../components/buttons/ButtonClassic\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Table from \"@material-ui/core/Table\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport TableHead from \"@material-ui/core/TableHead\";\n\nimport backend from \"../../apis/backend\";\nimport youtube from \"../../apis/youtube\";\nimport EpisodeDetails from \"./EpisodeDetails\";\nimport ModalOrg from \"../../components/ModalOrg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    backgroundColor: \"#424242\",\n    color: \"#fff\",\n    border: \"1px solid #696969\",\n  },\n  text: {\n    fontFamily: \"ProximaNova\",\n    color: \"#fff\",\n    padding: theme.spacing(1),\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  tableCell: {\n    color: \"#fff\",\n  },\n  icon: {\n    color: \"#fff\",\n  },\n}));\n\nconst options = [\n  {\n    label: \"To Watch\",\n    value: \"TO_WATCH\",\n    disable: false,\n  },\n  {\n    label: \"Favorites\",\n    value: \"FAVORITES\",\n    disable: false,\n  },\n  {\n    label: \"Remove/Stopped\",\n    value: \"TO_WATCH\",\n    disable: false,\n  },\n];\n\nconst TvShowDetails = () => {\n  const { id } = useParams();\n  const classes = useStyles();\n\n  const [tvshow, setTvshow] = useState({\n    id: null,\n    name: \"\",\n    genres: [],\n    noOfSeasons: 0,\n    noOfEpisodes: 0,\n    status: \"\",\n    overview: \"\",\n    networks: [],\n    episodeRunTime: 0,\n    firstAirDate: null,\n    lastAirDate: null,\n    nextAirDate: null,\n    rating: 0,\n    episodes: [],\n  });\n  const [open, setOpen] = useState(false);\n  const [trailer, setTrailer] = useState(null);\n  const [openEpisode, setOpenEpisode] = useState(false);\n  const [episode, setEpisode] = useState({ ep: null, viewed: { isViewed: false, rating: 0 } });\n  const [viewedEpisodes, setViewedEpisodes] = useState([]);\n  const [lastEpisodeId, setLastEpisodeId] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [expanded, setExpanded] = useState(false);\n  const openAddMenu = Boolean(anchorEl);\n  const [refresh, setRefresh] = useState(false);\n\n  useEffect(() => {\n    const idUser = localStorage.getItem(\"ID session\");\n    const getTvShow = async () => {\n      await backend.get(`tv-show/${id}`)\n      .then(res => {\n        const data = res.data;\n        setTvshow(data);\n        setLastEpisodeId(data.episodes[data.episodes.length - 1].id);\n      })\n      .catch(err => {\n        console.log(err.response);\n      });\n      \n    };\n    const getActiveLists = async () => {\n      await backend.get(\n        `/lists/find-in-list/${idUser}/TO_WATCH/${id}`\n      ).then(res => {\n        const lists = res.data;\n        if (lists.length === 0) {\n          options[0].disable = false;\n          options[1].disable = true;\n          options[2].disable = true;\n        } else if (lists.includes(options[1].value)) {\n          options[0].disable = true;\n          options[1].disable = false;\n          options[2].disable = true;\n          options[1].label = \"Remove from Favorites\";\n        } else if (lists.includes('STOPPED')) {\n          options[0].disable = true;\n          options[1].disable = true;\n          options[2].disable = true;\n        } else {\n          options[0].disable = true;\n          options[1].disable = false;\n          options[2].disable = false;\n          options[1].label = \"Favorites\";\n        }\n      }).catch(err => {\n        console.log(err.response);\n      });\n    };\n    const getViewdEpiosodes = async () => {\n      await backend.get(`/episode-viewed/tv-show/${id}/${idUser}`)\n      .then(res => {\n        setViewedEpisodes(res.data);\n      })\n      .catch(err => {\n        console.log(err.response);\n      });\n      \n    };\n    getTvShow();\n    getActiveLists();\n    getViewdEpiosodes();\n  }, [id, refresh]);\n\n  const getTrailer = async (name) => {\n    const response = await youtube.get(\"/search\", {\n      params: {\n        q: name + \" official trailer season 1\",\n      },\n    });\n    const data = response.data.items[0];\n    setTrailer(data.id.videoId);\n  };\n\n  const handleOpen = () => {\n    getTrailer(tvshow.name);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseEpisode = () => {\n    setOpenEpisode(false);\n    setRefresh(!refresh);\n  };\n\n  const handleOpenEpisode = (ep) => {\n    let rating = isViewed(ep);\n    let isViewedBool = false;\n    if (rating !== -1) isViewedBool = true;\n    setEpisode({ep :ep, viewed: { isViewed: isViewedBool, rating: rating}});\n    setOpenEpisode(true);\n  };\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseAddMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const isViewed = (ep) => {\n    for (var i = 0; i < viewedEpisodes.length; i++) {\n      if (ep.id === viewedEpisodes[i].episodeId)\n        return viewedEpisodes[i].rating;\n    }\n\n    return -1;\n  };\n\n  const getEpisodesBySeason = (episodes) => {\n    return episodes.map((ep) => {\n      return (\n        <TableRow key={ep.id}>\n          <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">\n            {ep.episodeNumber}\n          </TableCell>\n\n          <TableCell className={classes.tableCell} align=\"left\">\n            {options[0].disable ?\n            <Button\n              onClick={() => handleOpenEpisode(ep)}\n              style={{ color: \"#fff\" }}\n            >\n              {ep.name}\n            </Button> : ep.name\n            }\n          </TableCell>\n\n          <TableCell className={classes.tableCell} align=\"left\">\n            {ep.airDate}\n          </TableCell>\n          <TableCell className={classes.tableCell} align=\"right\">\n            {isViewed(ep) !== -1 ? <VisibilityIcon className={classes.icon} style={{ color: \"#ffa25f\" }} />:\n            <VisibilityIcon className={classes.icon} />}\n          </TableCell>\n        </TableRow>\n      );\n    });\n  };\n\n  const getAccordions = (no, episodes) => {\n    const episodesSeasons = episodes.filter((ep) => ep.noSeason === no);\n    return (\n      <Accordion\n        className={classes.paper}\n        key={no}\n        expanded={expanded === `panel${no}`}\n        onChange={handleChange(`panel${no}`)}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon className={classes.icon} />}\n        >\n          <Typography className={classes.heading}>Seasons {no}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell className={classes.tableCell}>No.</TableCell>\n                  <TableCell className={classes.tableCell} align=\"left\">\n                    Name\n                  </TableCell>\n                  <TableCell className={classes.tableCell} align=\"left\">\n                    Air date\n                  </TableCell>\n                  <TableCell\n                    className={classes.tableCell}\n                    align=\"right\"\n                  ></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{getEpisodesBySeason(episodesSeasons)}</TableBody>\n            </Table>\n          </TableContainer>\n        </AccordionDetails>\n      </Accordion>\n    );\n  };\n\n  const getSeaons = () => {\n    const seasons = [];\n    for (var i = 0; i < tvshow.noOfSeasons; i++) {\n      seasons.push(getAccordions(i + 1, tvshow.episodes));\n    }\n    return seasons;\n  };\n\n  const onAddSubmit = (list) => {\n    let tvShowToBack = {\n      type: list.value,\n      idUser: localStorage.getItem(\"ID session\"),\n      idTvShow: tvshow.id,\n    };\n    const addToList = async (type) => {\n      if (type === 'STOPPED') tvShowToBack.type = type;\n      await backend.post(\"/lists/add-to-list\", tvShowToBack)\n      .then(() => {\n        setRefresh(!refresh);\n      })\n      .catch(err => {\n        console.log(err.response);\n      });\n    \n    };\n    const removeFromList = async () => {\n      await backend.delete(\n        `/lists/remove-from-list/${tvShowToBack.type}/${tvShowToBack.idTvShow}/${tvShowToBack.idUser}`\n      ).then(() => {\n        setRefresh(!refresh);\n      })\n      .catch(err => {\n        console.log(err.response);\n      });\n    };\n    const addValues = [\"To Watch\", \"Favorites\"];\n    if (addValues.indexOf(list.label) !== -1) {\n      addToList();\n    } else {\n      removeFromList();\n      if (list.value === 'TO_WATCH' && viewedEpisodes.length !== 0) {  \n        addToList('STOPPED');\n      }\n    }\n    \n  };\n\n  return (\n    <div className={classes.root}>\n      {tvshow !== null ? (\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              {tvshow !== null ? (\n                <Typography\n                  className={classes.text}\n                  component=\"h4\"\n                  variant=\"h4\"\n                  style={{ textAlign: \"left\" }}\n                >\n                  {tvshow.name} (Score: {tvshow.rating.toFixed(1)}/5){\" \"}\n                  <ClassicButton\n                    onClick={handleClick}\n                    style={{ fontSize: \"0.8rem\", width: \"15%\", float: \"right\" }}\n                  >\n                    Add TVshow\n                  </ClassicButton>\n                  <Menu\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={openAddMenu}\n                    onClose={handleCloseAddMenu}\n                  >\n                    {options.map((option) => (\n                      <MenuItem\n                        key={option.label}\n                        onClick={() => {\n                          handleCloseAddMenu();\n                          onAddSubmit(option);\n                        }}\n                        disabled={option.disable}\n                      >\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                </Typography>\n              ) : null}\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              {\" \"}\n              <Typography\n                className={classes.text}\n                style={{ textAlign: \"left\" }}\n              >\n                {tvshow.status} / {tvshow.noOfSeasons} seasons /{\" \"}\n                {tvshow.noOfEpisodes} episodes / {tvshow.episodeRunTime} minutes\n              </Typography>\n              <Typography\n                className={classes.text}\n                style={{ textAlign: \"left\", color: \"rgba(255, 255, 255, 0.7)\" }}\n              >\n                {tvshow.overview}\n              </Typography>\n              <Typography\n                className={classes.text}\n                style={{ textAlign: \"left\" }}\n              >\n                Genres: {tvshow.genres.join(\", \")}\n              </Typography>\n              <Typography\n                className={classes.text}\n                style={{ textAlign: \"left\" }}\n              >\n                Networks: {tvshow.networks.join(\", \")}\n              </Typography>\n              <Typography\n                className={classes.text}\n                style={{ textAlign: \"left\" }}\n              >\n                First episode: {tvshow.firstAirDate} / Last episode:{\" \"}\n                {tvshow.lastAirDate}{\" \"}\n                {tvshow.nextAirDate !== null\n                  ? \"/ Next episode: \" + tvshow.nextAirDate\n                  : \"\"}\n              </Typography>\n              <br />\n              <ClassicButton onClick={handleOpen}>View trailer</ClassicButton>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            {getSeaons()}\n          </Grid>\n        </Grid>\n      ) : null}\n      {open === true ? (\n        <Modal\n          className={classes.modal}\n          open={open}\n          onClose={handleClose}\n          children={\n            <iframe\n              title=\"video player\"\n              src={`https://www.youtube.com/embed/${trailer}`}\n              width=\"854\"\n              height=\"480\"\n            />\n          }\n        />\n      ) : null}\n      {openEpisode === true ? (\n        <ModalOrg\n          className={classes.modal}\n          open={openEpisode}\n          onClose={handleCloseEpisode}\n          children={<EpisodeDetails \n            episodeToProp={episode}\n            idTvShow={id}\n            isStopped={options[0].disable && options[1].disable && options[2].disable}\n            isLastEpiosde={episode.ep.id === lastEpisodeId}\n            />}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default TvShowDetails;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport backend from \"../../apis/backend\";\n\nimport ListTvShows from '../../components/ListTvShows';\n\nconst Search = () => {\n    const { term } = useParams();\n    const [tvShows, setTvShows] = useState([]);\n\n    useEffect(() => {\n        const getMatchs = async () => {\n            await backend.get(`/tv-show/search/${term}`)\n            .then(res => {\n                setTvShows(res.data);\n            })\n            .catch(err => {\n                console.log(err.response);\n            });            \n        };\n        getMatchs();\n    }, [term]);\n\n    return <ListTvShows tvShows={tvShows}/>;\n};\n\nexport default Search;","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport backend from \"../apis/backend\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List4TvShows from \"./tvshows/List4TvShow\";\r\nimport { Facebook, Instagram, Reddit, Twitter } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#424242\",\r\n    color: \"#fff\",\r\n    border: \"1px solid #696969\",\r\n  },\r\n  text: {\r\n    fontFamily: \"ProximaNova\",\r\n    color: \"#fff\",\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n  text2: {\r\n    fontFamily: \"ProximaNova\",\r\n    color: \"#fff\",\r\n    paddingLeft: theme.spacing(1),\r\n    fontSize: \"1.1rem\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  tableCell: {\r\n    color: \"#fff\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n  textList: {\r\n    color: \"#fff\",\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n  button: {\r\n    color: \"#fff\",\r\n    float: \"left\",\r\n    fontFamily: \"ProximaNova\",\r\n    fontSize: \"1.2rem\",\r\n  },\r\n  social: {\r\n    color: \"white\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst friendStatus = [\r\n  \"Add friend\",\r\n  \"Unfriend\",\r\n  \"Request sent\",\r\n  \"Accept friend\",\r\n];\r\n\r\nconst FriendProfile = () => {\r\n  const { term } = useParams();\r\n  const classes = useStyles();\r\n  const [friend, setFriend] = useState({\r\n    displayName: \"\",\r\n  });\r\n  const [isFriend, setIsFriend] = useState(friendStatus[0]);\r\n  const [recently, setRecently] = useState([]);\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [toWatch, setToWatch] = useState([]);\r\n  const [upToDate, setUpToDate] = useState([]);\r\n  const [stopped, setStopped] = useState([]);\r\n  const [metrics, setMetrics] = useState({\r\n    hours: 0,\r\n    days: 0,\r\n    months: 0,\r\n    episodesWatched: 0,\r\n  });\r\n  const id = localStorage.getItem(\"ID session\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      await backend\r\n        .get(`/user/${id}/get-user/${term}`)\r\n        .then((res) => {\r\n          const data = res.data;\r\n          if (data.id.toString() === localStorage.getItem(\"ID session\")) {\r\n            window.location.assign(\"/\");\r\n          }\r\n          setFriend(data);\r\n          checkFriend(data.id);\r\n          getMetrics(data.id);\r\n        })\r\n        .catch(() => {\r\n          window.location.assign(\"/\");\r\n        });\r\n    };\r\n    const checkIsAccepted = async (friendId) => {\r\n      await backend\r\n        .get(`/friends/friend/${friendId}/${id}`)\r\n        .then((res) => {\r\n          if (res.data !== \"\") {\r\n            setIsFriend(friendStatus[3]);\r\n          } \r\n        })\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    const checkFriend = async (friendId) => {\r\n      await backend\r\n        .get(`/friends/friend/${id}/${friendId}`)\r\n        .then((res) => {\r\n          if (res.data !== \"\") {\r\n            if (res.data.isAccepted) {\r\n              setIsFriend(friendStatus[1]);\r\n              getLists(friendId);\r\n            } else {\r\n              setIsFriend(friendStatus[2]);\r\n            }\r\n          } else {\r\n            checkIsAccepted(friendId);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    const getMetrics = async (friendId) => {\r\n      await backend\r\n        .get(`/episode-viewed/get-metrics/${friendId}`)\r\n        .then((res) => setMetrics(res.data))\r\n        .catch((err) => console.log(err));\r\n    };\r\n    const getLists = async (friendId) => {\r\n      await backend\r\n        .get(`/lists/only-four-tv-show/${friendId}`)\r\n        .then((res) => {\r\n          const data = res.data;\r\n          let listRecently = [];\r\n          let listFavorites = [];\r\n          let listToWatch = [];\r\n          let listUpToDate = [];\r\n          let listStopped = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            if (data[i].type === \"RECENTLY_WATCHED\") {\r\n              listRecently.push(data[i].tvShowInfoDto);\r\n            }\r\n            if (data[i].type === \"FAVORITES\") {\r\n              listFavorites.push(data[i].tvShowInfoDto);\r\n            }\r\n            if (data[i].type === \"TO_WATCH\") {\r\n              listToWatch.push(data[i].tvShowInfoDto);\r\n            }\r\n            if (data[i].type === \"UP_TO_DATE\") {\r\n              listUpToDate.push(data[i].tvShowInfoDto);\r\n            }\r\n            if (data[i].type === \"STOPPED\") {\r\n              listStopped.push(data[i].tvShowInfoDto);\r\n            }\r\n          }\r\n          setRecently(listRecently);\r\n          setFavorites(listFavorites);\r\n          setToWatch(listToWatch);\r\n          setUpToDate(listUpToDate);\r\n          setStopped(listStopped);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n        });\r\n    };\r\n    getUser();\r\n  }, [term, id]);\r\n\r\n  const onClickAddFriend = () => {\r\n    const sentRequest = async () => {\r\n      await backend\r\n        .post(`/friends/request/${id}/${friend.id}`)\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    sentRequest();\r\n    window.location.reload();\r\n  };\r\n\r\n  const onClickUnfriend = () => {\r\n    const unfriendRequest = async () => {\r\n      await backend\r\n        .delete(`/friends/unfriend/${id}/${friend.id}`)\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    unfriendRequest();\r\n    window.location.reload();\r\n  };\r\n\r\n  const onClickAccept = () => {\r\n    const confirmFriend = async () => {\r\n      let data = {\r\n        idFriend: friend.id,\r\n        idUser: id,\r\n      };\r\n      await backend\r\n        .put(\"/friends/accept\", data)\r\n        .catch((err) => console.log(err));\r\n    };\r\n    confirmFriend();\r\n    window.location.reload();\r\n  };\r\n\r\n  const renderLists = () => {\r\n    const lists = [\r\n      {\r\n        label: \"RECENTLY WATCHED\",\r\n        value: \"recently-watched\",\r\n        tvShows: recently,\r\n      },\r\n      {\r\n        label: \"FAVORITES \",\r\n        value: \"favorites\",\r\n        tvShows: favorites,\r\n      },\r\n      {\r\n        label: \"TO WATCH\",\r\n        value: \"to-watch\",\r\n        tvShows: toWatch,\r\n      },\r\n      {\r\n        label: \"UP TO DATE / FINISHED\",\r\n        value: \"up-to-date\",\r\n        tvShows: upToDate,\r\n      },\r\n      {\r\n        label: \"STOPPED\",\r\n        value: \"stopped\",\r\n        tvShows: stopped,\r\n      },\r\n    ];\r\n    return lists.map((list) => {\r\n      return (\r\n        <Grid item xs={12} key={list.label}>\r\n          <Paper className={classes.paper}>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Box margin={1}>\r\n                <Typography style={{ textAlign: \"left\", minWidth: \"150px\" }}>\r\n                  {list.label}\r\n                </Typography>\r\n              </Box>\r\n              {list.tvShows.length !== 0 &&\r\n              list.value !== \"recently-watched\" ? (\r\n                <Box width=\"100%\">\r\n                  <Button\r\n                    onClick={() =>\r\n                      history.push(`/list/${list.value}/${friend.id}`)\r\n                    }\r\n                    style={{ color: \"#fff\", float: \"right\" }}\r\n                  >\r\n                    See all\r\n                  </Button>\r\n                </Box>\r\n              ) : null}\r\n            </Box>\r\n            <Box width=\"100%\">\r\n              <List4TvShows tvShows={list.tvShows} />\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={3}>\r\n            <Paper className={classes.paper}>\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <Box margin={1.2}>\r\n                  {\" \"}\r\n                  <Avatar\r\n                    className={classes.large}\r\n                    src={`http://localhost:8080/TST/user/avatar/${friend.id}`}\r\n                  />\r\n                </Box>\r\n                <Box width=\"100%\">\r\n                  <Typography\r\n                    className={classes.text}\r\n                    component=\"h5\"\r\n                    variant=\"h5\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {\" \"}\r\n                    {friend.displayName}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper className={classes.paper}>\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <Box width=\"100%\" margin={1.2}>\r\n                  <Typography\r\n                    className={classes.text}\r\n                    component=\"h5\"\r\n                    variant=\"h5\"\r\n                    style={{ textAlign: \"center\" }}\r\n                  >\r\n                    {\" \"}\r\n                    My TV time\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n              <Typography\r\n                className={classes.text}\r\n                variant=\"subtitle1\"\r\n                style={{ textAlign: \"center\", fontSize: \"1.2rem\" }}\r\n              >\r\n                {\" \"}\r\n                {metrics.months} months {metrics.days} days {metrics.hours}{\" \"}\r\n                hours\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper className={classes.paper}>\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <Box width=\"100%\" margin={1.2}>\r\n                  <Typography\r\n                    className={classes.text}\r\n                    component=\"h5\"\r\n                    variant=\"h5\"\r\n                    style={{ textAlign: \"center\" }}\r\n                  >\r\n                    {\" \"}\r\n                    Episodes watched\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n              <Typography\r\n                className={classes.text}\r\n                variant=\"subtitle1\"\r\n                style={{ textAlign: \"center\", fontSize: \"1.2rem\" }}\r\n              >\r\n                {\" \"}\r\n                {metrics.episodesWatched}\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper className={classes.paper}>\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <Box margin={2.4}>\r\n                  {\" \"}\r\n                  <PeopleAltIcon fontSize=\"large\" />\r\n                </Box>\r\n                <Box width=\"100%\">\r\n                  {isFriend === friendStatus[0] ? (\r\n                    <Button\r\n                      className={classes.button}\r\n                      onClick={onClickAddFriend}\r\n                    >\r\n                      {friendStatus[0]}\r\n                    </Button>\r\n                  ) : isFriend === friendStatus[1] ? (\r\n                    <Button\r\n                      className={classes.button}\r\n                      onClick={onClickUnfriend}\r\n                    >\r\n                      {friendStatus[1]}\r\n                    </Button>\r\n                  ) : isFriend === friendStatus[2] ? (\r\n                    <Typography\r\n                      className={classes.text}\r\n                      component=\"h5\"\r\n                      variant=\"h5\"\r\n                      style={{ textAlign: \"left\" }}\r\n                    >\r\n                      {\" \"}\r\n                      {friendStatus[2]}\r\n                    </Typography>\r\n                  ) : (\r\n                    <Button className={classes.button} onClick={onClickAccept}>\r\n                      {friendStatus[3]}\r\n                    </Button>\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          {isFriend === friendStatus[1] ? (\r\n            <React.Fragment>\r\n              {friend.gender !== null ||\r\n              friend.country !== null ||\r\n              friend.birthday !== null ||\r\n              friend.about !== null ||\r\n              friend.facebook !== null ||\r\n              friend.instagram !== null ||\r\n              friend.twitter !== null ||\r\n              friend.reddit !== null ? (\r\n                <Grid item xs={12}>\r\n                  <Paper className={classes.paper}>\r\n                    <Typography\r\n                      className={classes.text2}\r\n                      style={{ textAlign: \"left\" }}\r\n                    >\r\n                      {friend.gender !== null ? \"Gender: \" : null}\r\n                      {friend.gender}{\" \"}\r\n                      {friend.gender !== null && friend.country !== null\r\n                        ? \"/\"\r\n                        : null}{\" \"}\r\n                      {friend.country !== null ? \"Country: \" : null}{\" \"}\r\n                      {friend.country}{\" \"}\r\n                      {friend.gender !== null && friend.country !== null\r\n                        ? \"/\"\r\n                        : null}{\" \"}\r\n                      {friend.birthday !== null ? \"Birthday: \" : null}\r\n                      {friend.birthday}\r\n                    </Typography>\r\n                    {friend.about !== null ? (\r\n                      <Typography\r\n                        className={classes.text2}\r\n                        style={{\r\n                          paddingTop: \"1%\",\r\n                          paddingBottom: \"1%\",\r\n                          textAlign: \"left\",\r\n                          color: \"rgba(255, 255, 255, 0.7)\",\r\n                        }}\r\n                      >\r\n                        {friend.about}\r\n                      </Typography>\r\n                    ) : null}\r\n                    {friend.facebook ||\r\n                    friend.instagram ||\r\n                    friend.twitter ||\r\n                    friend.reddit ? (\r\n                      <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        alignItems=\"center\"\r\n                        spacing={1}\r\n                      >\r\n                        <Grid item>\r\n                          <Typography\r\n                            className={classes.text2}\r\n                            style={{ textAlign: \"left\" }}\r\n                          >\r\n                            You can find me on:\r\n                          </Typography>\r\n                        </Grid>\r\n\r\n                        {friend.facebook ? (\r\n                          <Grid item>\r\n                            <a\r\n                              href={`https://www.facebook.com/${friend.facebook}/`}\r\n                            >\r\n                              <Facebook\r\n                                fontSize=\"small\"\r\n                                className={classes.social}\r\n                              />\r\n                            </a>\r\n                          </Grid>\r\n                        ) : null}\r\n                        {friend.instagram ? (\r\n                          <Grid item>\r\n                            <a\r\n                              href={`https://www.instagram.com/${friend.instagram}/`}\r\n                            >\r\n                              <Instagram\r\n                                fontSize=\"small\"\r\n                                className={classes.social}\r\n                              />\r\n                            </a>\r\n                          </Grid>\r\n                        ) : null}\r\n                        {friend.twitter ? (\r\n                          <Grid item>\r\n                            <a href={`https://twitter.com/${friend.twitter}`}>\r\n                              <Twitter\r\n                                fontSize=\"small\"\r\n                                className={classes.social}\r\n                              />\r\n                            </a>\r\n                          </Grid>\r\n                        ) : null}\r\n                        {friend.reddit ? (\r\n                          <Grid item>\r\n                            <a\r\n                              href={`https://www.reddit.com/user/${friend.reddit}`}\r\n                            >\r\n                              <Reddit\r\n                                fontSize=\"small\"\r\n                                className={classes.social}\r\n                              />\r\n                            </a>\r\n                          </Grid>\r\n                        ) : null}\r\n                      </Grid>\r\n                    ) : null}\r\n                  </Paper>\r\n                </Grid>\r\n              ) : null}\r\n              {renderLists()}\r\n            </React.Fragment>\r\n          ) : null}\r\n        </Grid>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FriendProfile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport backend from \"../../apis/backend\";\r\n\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Grid, Paper, TextareaAutosize, Typography } from \"@material-ui/core\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport ButtonOrg from \"../../components/buttons/ButtonOrg\";\r\nimport { DeleteForever } from \"@material-ui/icons\";\r\nimport LinkOrg from \"../../components/links/LinkOrg\";\r\nimport ButtonClassic from \"../../components/buttons/ButtonClassic\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport LinkClassic from \"../../components/links/LinkClassic\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    border: \"1px solid #696969\",\r\n    backgroundColor: \"#424242\",\r\n    margin: theme.spacing(2),\r\n    padding: \"40px 20px\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n  textarea: {\r\n    color: \"#fff\",\r\n    backgroundColor: \"#424242\",\r\n    border: \"1px solid #696969\",\r\n    margin: theme.spacing(2),\r\n    width: \"97%\",\r\n    position: \"relative\",\r\n  },\r\n  button: {\r\n    left: \"92.8%\",\r\n  },\r\n  title: {\r\n    textAlign: \"left\",\r\n    color: \"white\",\r\n  },\r\n  icon: {\r\n    float: \"right\",\r\n    color: \"white\",\r\n  },\r\n  favorite: {\r\n    float: \"left\",\r\n    color: \"white\",\r\n  },\r\n  time: {\r\n    textAlign: \"left\",\r\n    color: \"gray\",\r\n  },\r\n  comment: {\r\n    textAlign: \"left\",\r\n    color: \"white\",\r\n  },\r\n  spoiler: {\r\n    marginTop: theme.spacing(-0.5),\r\n    marginLeft: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nconst Comments = () => {\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const idUser = localStorage.getItem(\"ID session\");\r\n  const [comments, setComments] = useState([]);\r\n  const [likedComments, setLikedComments] = useState([]);\r\n  const [content, setContent] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [comment, setComment] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getComments = async () => {\r\n      await backend\r\n        .get(`/comment/all-comments/${id}/USER`)\r\n        .then((res) => {\r\n          setComments(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n    const getLikedComments = async () => {\r\n      await backend\r\n        .get(`/comment/all-liked-comments/${idUser}`)\r\n        .then((res) => {\r\n          setLikedComments(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n    getComments();\r\n    getLikedComments();\r\n  }, [id, idUser]);\r\n\r\n  const timePosted = (diffTime) => {\r\n    let diffTimeMinutes = Math.round(diffTime / 60);\r\n    let diffTimeHours = 0;\r\n    while (diffTimeMinutes > 59) {\r\n      diffTimeMinutes -= 60;\r\n      diffTimeHours++;\r\n    }\r\n    let diffTimeDays = 0;\r\n    while (diffTimeHours > 23) {\r\n      diffTimeHours -= 24;\r\n      diffTimeDays++;\r\n    }\r\n\r\n    let timeAgo = \"\";\r\n    if (diffTimeMinutes === 0 && diffTimeHours === 0 && diffTimeDays === 0) {\r\n      timeAgo = \"now\";\r\n    } else {\r\n      if (diffTimeDays > 0) {\r\n        if (diffTimeDays === 1) {\r\n          timeAgo += \"1 day \";\r\n        } else {\r\n          timeAgo += `${diffTimeDays} days `;\r\n        }\r\n      }\r\n      if (diffTimeHours > 0) {\r\n        if (diffTimeHours === 1) {\r\n          timeAgo += \"1 hour \";\r\n        } else {\r\n          timeAgo += `${diffTimeHours} hours `;\r\n        }\r\n      }\r\n      if (diffTimeMinutes > 0) {\r\n        if (diffTimeMinutes === 1) {\r\n          timeAgo += \"1 minute \";\r\n        } else {\r\n          timeAgo += `${diffTimeMinutes} minutes `;\r\n        }\r\n      }\r\n      timeAgo += \"ago\";\r\n    }\r\n\r\n    return timeAgo;\r\n  };\r\n\r\n  const onDeleteComment = (commId) => {\r\n    const deleteAllReports = async () => {\r\n      await backend\r\n        .delete(`/report/delete-by-comment/${commId}`)\r\n        .then(() => removeComment())\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    const removeComment = async () => {\r\n      await backend\r\n        .delete(`/comment/remove/${commId}`)\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    deleteAllReports(commId);\r\n    window.location.reload();\r\n  };\r\n\r\n  const onClickSpoiler = (index) => {\r\n    let commentsAux = [...comments];\r\n    let commentSpoiler = { ...commentsAux[index] };\r\n    commentSpoiler.isSpoiler = false;\r\n    commentsAux[index] = commentSpoiler;\r\n    setComments(commentsAux);\r\n  };\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const handleMenuOpen = (event, comment) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setComment(comment);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <LinkClassic href={`/report/spoiler/${comment}`}>\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleMenuClose();\r\n          }}\r\n        >\r\n          Spoiler\r\n        </MenuItem>\r\n      </LinkClassic>\r\n      <LinkClassic href={`/report/inappropriate/${comment}`}>\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleMenuClose();\r\n          }}\r\n        >\r\n          Inappropriate\r\n        </MenuItem>\r\n      </LinkClassic>\r\n    </Menu>\r\n  );\r\n\r\n  const isLiked = (idComment) => {\r\n    const comment = likedComments.find((e) => e.id === idComment);\r\n    if (comment !== undefined) return true;\r\n    return false;\r\n  };\r\n\r\n  const onClickLikeComment = (idComment) => {\r\n    const likeComment = async () => {\r\n      await backend\r\n        .post(`/comment/${idComment}/like-comment/${idUser}`)\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    likeComment();\r\n    window.location.reload();\r\n  };\r\n\r\n  const onClickDislikeComment = (idComment) => {\r\n    const dislikeComment = async () => {\r\n      await backend\r\n        .delete(`/comment/${idComment}/remove-like/${idUser}`)\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    dislikeComment();\r\n    window.location.reload();\r\n  };\r\n\r\n  const renderComments = () => {\r\n    return comments.map((comm, index) => {\r\n      const user = comm.user;\r\n      const currentTime = new Date().getTime();\r\n\r\n      const postDate = new Date(comm.postDate);\r\n\r\n      const postTime =\r\n        postDate.getTime() - new Date().getTimezoneOffset() * 60000;\r\n      const diffTime = (currentTime - postTime) / 1000;\r\n\r\n      return (\r\n        <Paper key={comm.id} className={classes.paper}>\r\n          <Grid container wrap=\"nowrap\" spacing={2}>\r\n            <Grid item>\r\n              <Avatar\r\n                className={classes.avatar}\r\n                alt=\"\"\r\n                src={`http://localhost:8080/TST/user/avatar/${user.id}`}\r\n              />\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"h5\" className={classes.title}>\r\n                <LinkOrg href={`/user/${user.username}`}>\r\n                  {\" \"}\r\n                  {user.displayName}\r\n                </LinkOrg>\r\n                {user.id == idUser ? (\r\n                  <IconButton\r\n                    className={classes.icon}\r\n                    onClick={() => onDeleteComment(comm.id)}\r\n                  >\r\n                    <DeleteForever />\r\n                  </IconButton>\r\n                ) : (\r\n                  <IconButton\r\n                    className={classes.icon}\r\n                    onClick={(event) => handleMenuOpen(event, comm.id)}\r\n                  >\r\n                    <FlagIcon\r\n                      edge=\"end\"\r\n                      aria-label=\"account of current user\"\r\n                      aria-controls={menuId}\r\n                      aria-haspopup=\"true\"\r\n                      color=\"inherit\"\r\n                    />\r\n                  </IconButton>\r\n                )}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                component=\"p\"\r\n                className={classes.time}\r\n              >\r\n                posted {timePosted(diffTime, comm.postDate)}\r\n              </Typography>{\" \"}\r\n              <br />\r\n              {!comm.isSpoiler ? (\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  component=\"p\"\r\n                  className={classes.comment}\r\n                >\r\n                  {comm.content}\r\n                </Typography>\r\n              ) : (\r\n                <Typography className={classes.comment} component=\"h1\">\r\n                  <Grid item container>\r\n                    <WarningIcon />\r\n                    <span>\r\n                      &nbsp;<b>SPOILER ALERT!</b> Some users flagged this\r\n                      comment as spoiler.&nbsp;\r\n                    </span>{\" \"}\r\n                    <ButtonClassic\r\n                      className={classes.spoiler}\r\n                      onClick={() => onClickSpoiler(index)}\r\n                    >\r\n                      Display anyway\r\n                    </ButtonClassic>\r\n                  </Grid>\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Divider style={{ backgroundColor: \"#696969\" }} />\r\n          {user.id == idUser ? (\r\n            <Typography\r\n              className={classes.favorite}\r\n              variant=\"subtitle2\"\r\n              component=\"h2\"\r\n              style={{ marginTop: \"10px\", marginLeft: \"9px\" }}\r\n            >\r\n              <Grid item container>\r\n                <FavoriteIcon fontSize=\"small\" />\r\n                <span>&nbsp;</span> {comm.likes}\r\n              </Grid>\r\n            </Typography>\r\n          ) : !isLiked(comm.id) ? (\r\n            <IconButton\r\n              className={classes.favorite}\r\n              onClick={() => onClickLikeComment(comm.id)}\r\n            >\r\n              {\" \"}\r\n              <Typography variant=\"subtitle2\" component=\"h2\">\r\n                <Grid item container>\r\n                  <FavoriteBorderIcon fontSize=\"small\" />\r\n                  <span>&nbsp;</span>\r\n                  {comm.likes}{\" \"}\r\n                </Grid>\r\n              </Typography>\r\n            </IconButton>\r\n          ) : (\r\n            <IconButton\r\n              className={classes.favorite}\r\n              onClick={() => onClickDislikeComment(comm.id)}\r\n            >\r\n              {\" \"}\r\n              <Typography variant=\"subtitle2\" component=\"h2\">\r\n                <Grid item container>\r\n                  <FavoriteIcon fontSize=\"small\" />\r\n                  <span>&nbsp;</span>\r\n                  {comm.likes}{\" \"}\r\n                </Grid>\r\n              </Typography>\r\n            </IconButton>\r\n          )}\r\n          {renderMenu}\r\n        </Paper>\r\n      );\r\n    });\r\n  };\r\n\r\n  const onCommentChange = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  const onPostComment = (e) => {\r\n    const postComment = async () => {\r\n      let data = {\r\n        content: content,\r\n        idEpisode: id,\r\n        idUser: idUser,\r\n      };\r\n      await backend\r\n        .post(\"/comment/post\", data)\r\n        .catch((err) => alert(err.response.data.errors));\r\n    };\r\n    postComment();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TextareaAutosize\r\n        className={classes.textarea}\r\n        placeholder=\"Enter your comment here\"\r\n        rowsMin={5}\r\n        onChange={onCommentChange}\r\n        value={content}\r\n      />\r\n      <ButtonOrg className={classes.button} onClick={onPostComment}>\r\n        POST\r\n      </ButtonOrg>\r\n      {renderComments()}\r\n      <br />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport backend from \"../apis/backend\";\r\n\r\nconst Comments = () => {\r\n  const { idEpisode } = useParams();\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getComments = async () => {\r\n      await backend\r\n        .get(`/comment/all-comments/${idEpisode}/ADMIN`)\r\n        .then((res) => setComments(res.data))\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    getComments();\r\n  }, [idEpisode]);\r\n\r\n  const timePosted = (diffTime) => {\r\n    let diffTimeMinutes = Math.round(diffTime / 60);\r\n    let diffTimeHours = 0;\r\n    while (diffTimeMinutes > 59) {\r\n      diffTimeMinutes -= 60;\r\n      diffTimeHours++;\r\n    }\r\n    let diffTimeDays = 0;\r\n    while (diffTimeHours > 23) {\r\n      diffTimeHours -= 24;\r\n      diffTimeDays++;\r\n    }\r\n\r\n    let timeAgo = \"\";\r\n    if (diffTimeMinutes === 0 && diffTimeHours === 0 && diffTimeDays === 0) {\r\n      timeAgo = \"now\";\r\n    } else {\r\n      if (diffTimeDays > 0) {\r\n        if (diffTimeDays === 1) {\r\n          timeAgo += \"1 day \";\r\n        } else {\r\n          timeAgo += `${diffTimeDays} days `;\r\n        }\r\n      }\r\n      if (diffTimeHours > 0) {\r\n        if (diffTimeHours === 1) {\r\n          timeAgo += \"1 hour \";\r\n        } else {\r\n          timeAgo += `${diffTimeHours} hours `;\r\n        }\r\n      }\r\n      if (diffTimeMinutes > 0) {\r\n        if (diffTimeMinutes === 1) {\r\n          timeAgo += \"1 minute \";\r\n        } else {\r\n          timeAgo += `${diffTimeMinutes} minutes `;\r\n        }\r\n      }\r\n      timeAgo += \"ago\";\r\n    }\r\n\r\n    return timeAgo;\r\n  };\r\n\r\n  const onClickDelete = (idComment) => {\r\n    const deleteComment = async () => {\r\n      await backend\r\n        .delete(`/comment/remove/${idComment}`)\r\n        .then(() => window.location.reload())\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    deleteComment();\r\n  };\r\n\r\n  const onClickSpoiler = (idComment, isSpoiler) => {\r\n    const spoilerComment = async () => {\r\n      let data = {\r\n        isSpoiler: isSpoiler,\r\n      };\r\n      await backend\r\n        .put(`/comment/edit/${idComment}`, data)\r\n        .then(() => window.location.reload())\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    spoilerComment();\r\n  };\r\n\r\n  const renderedList = () => {\r\n    return comments.map((comment) => {\r\n      const user = comment.user;\r\n      const currentTime = new Date().getTime();\r\n\r\n      const postDate = new Date(comment.postDate);\r\n\r\n      const postTime =\r\n        postDate.getTime() - new Date().getTimezoneOffset() * 60000;\r\n      const diffTime = (currentTime - postTime) / 1000;\r\n      return (\r\n        <div key={comment.id} className=\"comment\">\r\n          <div className=\"avatar\">\r\n            <img\r\n              alt=\"\"\r\n              src={`http://localhost:8080/TST/user/avatar/${user.id}`}\r\n            />\r\n          </div>\r\n          <div className=\"content\">\r\n            <Link to={`/admin/users/update/${user.id}`}>{user.username}</Link>\r\n            <div className=\"metadata\">\r\n              <span className=\"date\">\r\n                {timePosted(diffTime, comment.postDate)}\r\n              </span>\r\n            </div>\r\n            <div className=\"text\">{comment.content}</div>\r\n          </div>\r\n          <br />\r\n          <button\r\n            className=\"ui negative right floated button\"\r\n            onClick={() => onClickDelete(comment.id)}\r\n          >\r\n            Delete comment\r\n          </button>\r\n          {!comment.isSpoiler ? (\r\n            <button\r\n              className=\"ui yellow right floated button\"\r\n              onClick={() => onClickSpoiler(comment.id, true)}\r\n            >\r\n              Mark as spoiler\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"ui green right floated button\"\r\n              onClick={() => onClickSpoiler(comment.id, false)}\r\n            >\r\n              Mark as not spoiler\r\n            </button>\r\n          )}\r\n          <br />\r\n          <br />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui comments\">\r\n      <h3 className=\"ui dividing header\">Comments</h3>\r\n      {renderedList()}\r\n      <br/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Container,\r\n  makeStyles,\r\n  TextareaAutosize,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport BugReportIcon from \"@material-ui/icons/BugReport\";\r\nimport ReportProblemIcon from \"@material-ui/icons/ReportProblem\";\r\nimport MoodBadIcon from \"@material-ui/icons/MoodBad\";\r\n\r\nimport ButtonOrg from \"../components/buttons/ButtonOrg\";\r\nimport backend from \"../apis/backend\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    top: \"18%\",\r\n    left: \"32%\",\r\n    border: \"solid 1px #696969\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(1, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    backgroundColor: \"#585858\",\r\n    height: \"40px\",\r\n    color: \"#fff\",\r\n    borderBottom: \"2px solid #696969\",\r\n    padding: \"8px 10px\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  textarea: {\r\n    color: \"#fff\",\r\n    backgroundColor: \"#424242\",\r\n    border: \"1px solid #696969\",\r\n    margin: theme.spacing(2),\r\n    width: \"99.8%\",\r\n    position: \"relative\",\r\n    left: \"-3.3%\",\r\n  },\r\n  icon: {\r\n    fill: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst REPORT_TYPE = [\r\n  {\r\n    value: \"SPOILER_COMMENT\",\r\n    label: \"Report spoiler\",\r\n  },\r\n  {\r\n    value: \"INAPPROPRIATE_COMMENT\",\r\n    label: \"Report inappropriate comment\",\r\n  },\r\n  {\r\n    value: \"BUG\",\r\n    label: \"Report bug\",\r\n  },\r\n];\r\n\r\nconst Report = ({ type }) => {\r\n  const classes = useStyles();\r\n  const [report, setReport] = useState({\r\n    reportType: null,\r\n    content: \"\",\r\n    idUser: null,\r\n  });\r\n  const id = useParams();\r\n  const [comment, setComment] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setReport({\r\n      reportType: type,\r\n      idUser: localStorage.getItem(\"ID session\"),\r\n    });\r\n    const getComment = async () => {\r\n      await backend\r\n        .get(`/comment/${id.id}`)\r\n        .then((res) => setComment(res.data))\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    if (id.id !== undefined) {\r\n      getComment();\r\n    }\r\n  }, [type, id]);\r\n\r\n  const onFormChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n\r\n    setReport({\r\n      ...report,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const submitReport = async () => {\r\n      let commentId = null;\r\n      if (comment !== null) commentId = comment.id;\r\n      let reportToCreate = {\r\n        reportType: report.reportType,\r\n        content: report.content,\r\n        idUser: report.idUser,\r\n        idComment: commentId,\r\n      };\r\n      await backend\r\n        .post(\"/report/add\", reportToCreate)\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    submitReport();\r\n    window.location.assign(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className={classes.root}>\r\n      <div className={classes.paper}>\r\n        <Container maxWidth=\"sm\" className={classes.title}>\r\n          <Typography variant=\"inherit\" style={{ fontSize: \"16px\" }}>\r\n            <Grid item container>\r\n              {type === REPORT_TYPE[0].value ? (\r\n                <ReportProblemIcon />\r\n              ) : type === REPORT_TYPE[1].value ? (\r\n                <MoodBadIcon />\r\n              ) : (\r\n                <BugReportIcon />\r\n              )}\r\n              <span>&nbsp;</span>\r\n              {REPORT_TYPE.find((x) => x.value === type).label}{\" \"}\r\n            </Grid>\r\n          </Typography>\r\n        </Container>\r\n        <form className={classes.form} onSubmit={onFormSubmit}>\r\n          {type !== REPORT_TYPE[2].value ? (\r\n            <TextareaAutosize\r\n              disabled\r\n              className={classes.textarea}\r\n              value={comment !== null ? comment.content : \"\"}\r\n              style={{ resize: \"none\", width: \"100%\" }}\r\n            />\r\n          ) : null}\r\n          <TextareaAutosize\r\n            className={classes.textarea}\r\n            required\r\n            rowsMin={10}\r\n            id=\"content\"\r\n            name=\"content\"\r\n            value={report.content}\r\n            onChange={onFormChange}\r\n            placeholder=\"Give the context on what happened\"\r\n          />\r\n          <ButtonOrg type=\"submit\" fullWidth variant=\"contained\">\r\n            Submit\r\n          </ButtonOrg>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Report;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport backend from \"../apis/backend\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport BugReportIcon from \"@material-ui/icons/BugReport\";\r\nimport ReportProblemIcon from \"@material-ui/icons/ReportProblem\";\r\nimport MoodBadIcon from \"@material-ui/icons/MoodBad\";\r\n\r\nconst REPORT_TYPE = [\r\n  {\r\n    value: \"SPOILER_COMMENT\",\r\n    label: \"Spoiler\",\r\n  },\r\n  {\r\n    value: \"INAPPROPRIATE_COMMENT\",\r\n    label: \"Inappropriate comment\",\r\n  },\r\n  {\r\n    value: \"BUG\",\r\n    label: \"Bug\",\r\n  },\r\n];\r\n\r\nconst ListReportsAdminFirstPage = () => {\r\n  const [reports, setReports] = useState([]);\r\n    const [viewAll, setViewAll] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getReports = async () => {\r\n      await backend\r\n        .get(\"/report/view-all\")\r\n        .then((res) => setReports(res.data))\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    getReports();\r\n  }, []);\r\n\r\n  const renderReports = () => {\r\n    return reports.map((r) => {\r\n      let isViewed = \"NO\";\r\n      if (r.isViewed) isViewed = \"YES\";\r\n      return (\r\n        (viewAll && r.isViewed) || !r.isViewed ? \r\n        <tr key={r.id}>\r\n          <td>{r.id}</td>\r\n          <td>\r\n            <Grid item container>\r\n              {r.reportType === REPORT_TYPE[0].value ? (\r\n                <ReportProblemIcon />\r\n              ) : r.reportType === REPORT_TYPE[1].value ? (\r\n                <MoodBadIcon />\r\n              ) : (\r\n                <BugReportIcon />\r\n              )}{\" \"}\r\n              <span>&nbsp;&nbsp;</span>\r\n              {REPORT_TYPE.find((x) => x.value === r.reportType).label}\r\n            </Grid>\r\n          </td>\r\n          <td>{r.sentDate}</td>\r\n          <td>{isViewed}</td>\r\n          <td className=\"selectable\">\r\n            <Link to={`/admin/report/${r.id}`} className=\"item\">\r\n              View report\r\n            </Link>\r\n          </td>\r\n        </tr>: null\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <table className=\"ui celled table\">\r\n        <thead>\r\n          <tr>\r\n            <th colSpan=\"5\">Reports</th>\r\n          </tr>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Report type</th>\r\n            <th>Sent date</th>\r\n            <th>Viewed</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderReports()}</tbody>\r\n      </table>\r\n      {!viewAll ? <button className=\"ui left floated button\" onClick={() => setViewAll(true)}>View all reports</button>: null}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ListReportsAdminFirstPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport backend from \"../apis/backend\";\r\n\r\nconst REPORT_TYPE = [\r\n  {\r\n    value: \"SPOILER_COMMENT\",\r\n    label: \"Spoiler\",\r\n  },\r\n  {\r\n    value: \"INAPPROPRIATE_COMMENT\",\r\n    label: \"Inappropriate comment\",\r\n  },\r\n  {\r\n    value: \"BUG\",\r\n    label: \"Bug\",\r\n  },\r\n];\r\n\r\nconst ReportAdmin = () => {\r\n  const { id } = useParams();\r\n  const [report, setReport] = useState({\r\n    id: 0,\r\n    reportType: \"\",\r\n    content: \"\",\r\n    sentDate: \"\",\r\n    username: \"\",\r\n    comment: null,\r\n  });\r\n  const [episode, setEpisode] = useState(null);\r\n  const [viewComment, setViewComment] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getReport = async () => {\r\n      await backend\r\n        .get(`/report/${id}`)\r\n        .then((res) => {\r\n          setReport(res.data);\r\n          if (!res.data.isViewed) markReport();\r\n          if (res.data.reportType !== REPORT_TYPE[2].value) {\r\n            const idComment = res.data.comment.id;\r\n            getComment(idComment);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    const markReport = async () => {\r\n      await backend\r\n        .put(`/report/mark/${id}`)\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    const getComment = async (idComment) => {\r\n      await backend\r\n        .get(`/comment/${idComment}`)\r\n        .then((res) => setEpisode(res.data.episode))\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    getReport();\r\n  }, [id]);\r\n\r\n  const type = REPORT_TYPE.find((x) => x.value === report.reportType);\r\n  const commentReported = report.comment;\r\n  var userReported = null;\r\n  if (report.comment !== null) {\r\n    userReported = report.comment.user;\r\n  }\r\n\r\n  const onClickDelete = (idComment) => {\r\n    const deleteComment = async () => {\r\n      onClickExport(\"xml\");\r\n      await backend\r\n        .delete(`/report/delete/${id}`)\r\n        .then(() => {\r\n          onDeleteReport();\r\n        })\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    const onDeleteReport = async () => {\r\n      await backend\r\n        .delete(`/comment/remove/${idComment}`)\r\n        .then(() => window.location.assign(\"/\"))\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    deleteComment();\r\n  };\r\n\r\n  const onClickSpoiler = (idComment, isSpoiler) => {\r\n    const spoilerComment = async () => {\r\n      let data = {\r\n        isSpoiler: isSpoiler,\r\n      };\r\n      await backend\r\n        .put(`/comment/edit/${idComment}`, data)\r\n        .then(() => window.location.reload())\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    spoilerComment();\r\n  };\r\n\r\n  const onClickExport = (fileType) => {\r\n    const exportReport = async () => {\r\n      await backend\r\n        .get(`/report/export/${report.id}`, {\r\n          params: { fileType: fileType },\r\n          responseType: \"text\",\r\n        })\r\n        .then((res) => {\r\n          let typeForBlob =\r\n            fileType == \"txt\"\r\n              ? \"text/plain;charset=utf-8\"\r\n              : \"text/xml;charset=utf-8\";\r\n          let blob = new Blob([res.data], { type: typeForBlob });\r\n          saveAs(blob, `report-data-${report.id}.` + fileType);\r\n        })\r\n        .catch((err) => console.log(err.response));\r\n    };\r\n    exportReport();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form className=\"ui form\">\r\n        <div className=\"fields\">\r\n          <div className=\"six wide field\">\r\n            <label>ID</label>\r\n            <input type=\"number\" readOnly value={report.id} />\r\n          </div>\r\n          <div className=\"six wide field\">\r\n            <label>Report type</label>\r\n            <input\r\n              type=\"text\"\r\n              readOnly\r\n              className=\"form-control\"\r\n              value={type === undefined ? \"\" : type.label}\r\n            />\r\n          </div>\r\n          <div className=\"six wide field\">\r\n            <label>Sent date</label>\r\n            <input\r\n              type=\"text\"\r\n              readOnly\r\n              className=\"form-control\"\r\n              value={report.sentDate}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>\r\n            User\r\n            <input\r\n              type=\"text\"\r\n              readOnly\r\n              className=\"form-control\"\r\n              value={report.username}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>\r\n            Report\r\n            <textarea readOnly value={report.content} />\r\n          </label>\r\n        </div>\r\n      </form>\r\n      {viewComment ? (\r\n        <div>\r\n          <br />\r\n          <div className=\"ui segment\">\r\n            <span>\r\n              <b>User reported:</b> &nbsp;&nbsp;\r\n            </span>\r\n            <Link to={`/admin/users/update/${userReported.id}`}>\r\n              {userReported.username}\r\n            </Link>\r\n            <div className=\"metadata\">\r\n              <span className=\"date\">\r\n                <b>Post date:</b> {commentReported.postDate}\r\n              </span>\r\n            </div>\r\n            <div className=\"text\">\r\n              {\" \"}\r\n              <span>\r\n                <b>Comment:</b> &nbsp;&nbsp;\r\n              </span>\r\n              {commentReported.content}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      {episode !== null ? (\r\n        <div>\r\n          <br />\r\n          <Link\r\n            to={`/admin/tvshows/show/${episode.tvShow.id}/episode/${episode.id}`}\r\n          >\r\n            <button className=\"ui left floated button\">View episode</button>\r\n          </Link>\r\n          {!viewComment ? (\r\n            <button\r\n              className=\"ui left floated button\"\r\n              onClick={() => setViewComment(true)}\r\n            >\r\n              View comment\r\n            </button>\r\n          ) : null}\r\n          {viewComment ? (\r\n            <div>\r\n              <button\r\n                className=\"ui negative right floated button\"\r\n                onClick={() => onClickDelete(commentReported.id)}\r\n              >\r\n                Delete comment\r\n              </button>\r\n              {!commentReported.isSpoiler ? (\r\n                <button\r\n                  className=\"ui yellow right floated button\"\r\n                  onClick={() => onClickSpoiler(commentReported.id, true)}\r\n                >\r\n                  Mark as spoiler\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"ui green right floated button\"\r\n                  onClick={() => onClickSpoiler(commentReported.id, false)}\r\n                >\r\n                  Mark as not spoiler\r\n                </button>\r\n              )}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ) : (\r\n        <br />\r\n      )}\r\n      <button\r\n        className=\"ui left floated button\"\r\n        onClick={() => onClickExport(\"xml\")}\r\n      >\r\n        Export XML\r\n      </button>\r\n      <button\r\n        className=\"ui left floated button\"\r\n        onClick={() => onClickExport(\"txt\")}\r\n      >\r\n        Export TXT\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ReportAdmin;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport AdminNavBar from \"../admin/AdminNavbar\";\nimport RenderUsers from \"../admin/users/RenderUsers\";\nimport AddUser from \"../admin/users/AddUser\";\nimport EditUser from \"../admin/users/EditUser\";\nimport ViewTvShows from \"../admin/tvshows/ViewTvShows\";\nimport AddTvShows from \"../admin/tvshows/AddTvShows\";\nimport TvShow from \"../admin/tvshows/TvShow\";\nimport ViewEpisodes from \"../admin/episodes/ViewEpisodes\";\nimport Episode from \"../admin/episodes/Episode\";\nimport AddEpisode from '../admin/episodes/AddEpisode';\nimport NavbarUser from \"../users/NavbarUser\";\nimport IndexPage from \"../pages/IndexPage\";\nimport Profile from \"../users/Profile\";\nimport EditProfile from \"../users/EditProfile\";\nimport ExploreTvShows from \"../users/tvshows/ExploreTvShows\";\nimport TvShowDetails from \"../users/tvshows/TvShowDetails\";\nimport Search from '../users/tvshows/Search';\nimport ListTvShows from \"./ListTvShows\";\nimport FriendProfile from \"../users/FriendProfile\";\nimport Comments from \"../users/tvshows/Comments\";\nimport CommentsAdmin from \"../admin/Comments\";\nimport backend from \"../apis/backend\";\nimport Report from \"../pages/Report\";\nimport ListReportsAdminFirstPage from \"../admin/indexAdmin\";\nimport ReportAdmin from \"../admin/ReportAdmin\";\n\nconst GUEST_URLS = [\"/register\", \"/login\", \"/user/change-password/\"];\nconst INDEX_TYPE = [\"LOGIN\", \"SIGUP\", \"FORGET_PASSWORD\", \"RESET_PASSWORD\"]\nconst REPORT_TYPE = [\"SPOILER_COMMENT\", \"INAPPROPRIATE_COMMENT\", \"BUG\"]\n\nconst App = () => {\n  const session = localStorage.getItem(\"ID session\");\n  const user = localStorage.getItem(\"User\");\n\n  const logout = () => {\n    const logoutUser = async () => {\n      await backend.post(`/basic-user/logout/${session}`)\n      .then(() => {\n        localStorage.removeItem(\"ID session\");\n        localStorage.removeItem(\"User\");\n        localStorage.removeItem(\"token\");\n        window.location.assign(\"/\");\n      })\n      .catch(err => console.log(err.response));\n    };\n    logoutUser();\n  };\n\n  if (localStorage.getItem(\"User\") === \"USER\")\n    document.body.style.backgroundColor = \"#424242\";\n\n  const defaultRouteGuest = () => {\n    let location = window.location.pathname;\n    let checkLocationGuest = GUEST_URLS.find(url => url === location);\n    if (checkLocationGuest !== undefined) return null;\n    if (location.indexOf(GUEST_URLS[2]) !== -1) return null;\n    return <Redirect to=\"\" />;\n  };\n\n  const defaultRouteUser = () => {\n    let location = window.location.pathname;\n    if (location.indexOf(\"admin\") !== -1) return <Redirect to=\"\" />;\n\n    return null;\n  }\n\n  return (\n    <BrowserRouter>\n      {session !== null ? (\n        <React.Fragment>\n          {user === \"ADMIN\" ? (\n            <Route path=\"\" render={() => <AdminNavBar logout={logout} />} />\n          ) : (\n            <Route path=\"\" render={() => <NavbarUser logout={logout} />} />\n          )}\n          <div className=\"ui container\">\n            <React.Fragment>\n              {user === \"ADMIN\" ? (\n                <React.Fragment>\n                  <Route path=\"/\" exact component={ListReportsAdminFirstPage} />\n                  <Route path=\"/admin/report/:id\" exact component={ReportAdmin} />\n                  <Route path=\"/admin/users\" exact component={RenderUsers} />\n                  <Route path=\"/admin/users/add\" exact component={AddUser} />\n                  <Route\n                    path=\"/admin/users/update/:id\"\n                    exact\n                    component={EditUser}\n                  />\n                  <Route\n                    path=\"/admin/tvshows/view\"\n                    exact\n                    component={ViewTvShows}\n                  />\n                  <Route\n                    path=\"/admin/tvshows/show/:id\"\n                    exact\n                    component={TvShow}\n                  />\n                  <Route\n                    path=\"/admin/tvshows/add\"\n                    exact\n                    component={AddTvShows}\n                  />\n                  <Route\n                    path=\"/admin/tvshows/show/:id/episodes\"\n                    exact\n                    component={ViewEpisodes}\n                  />\n                  <Route\n                    path=\"/admin/tvshows/show/:id/add\"\n                    exact\n                    component={AddEpisode}\n                  />\n                  <Route\n                    path=\"/admin/tvshows/show/:idShow/episode/:idEpisode\"\n                    exact\n                    component={Episode}\n                  />\n                  <Route\n                    path=\"/admin/tvshows/show/:idShow/episode/:idEpisode/comments\"\n                    exact\n                    component={CommentsAdmin}\n                  />\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  {defaultRouteUser()}\n                  <Route path=\"/\" exact component={Profile} />\n                  <Route path=\"/profile/edit\" exact component={EditProfile} />\n                  <Route\n                    path=\"/tv-shows/explore\"\n                    exact\n                    component={ExploreTvShows}\n                  />\n                  <Route path=\"/tv-show/:id\" exact component={TvShowDetails}/> \n                  <Route\n                    path=\"/search/:term\"\n                    exact\n                    component={Search}\n                  />\n                  <Route path=\"/list/:type/:id\" exact component={ListTvShows}/> \n                  <Route path=\"/user/:term\" exact component={FriendProfile} />\n                  <Route path=\"/episode/:id/comments/\" exact component={Comments} />\n                  <Route path=\"/report/bug\" exact component={() => <Report type={REPORT_TYPE[2]}/>} />\n                  <Route path=\"/report/inappropriate/:id\" exact component={() => <Report type={REPORT_TYPE[1]}/>} />\n                  <Route path=\"/report/spoiler/:id\" exact component={() => <Report type={REPORT_TYPE[0]}/>} />\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          </div>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          {defaultRouteGuest()}\n          <Route path=\"/\" exact render={() => <IndexPage indexType={INDEX_TYPE} typeSelected={INDEX_TYPE[0]}/>} />\n          <Route path=\"/register\" exact render={() => <IndexPage indexType={INDEX_TYPE} typeSelected={INDEX_TYPE[1]}/>} />\n          <Route path=\"/forget-password\" exact render={() => <IndexPage indexType={INDEX_TYPE} typeSelected={INDEX_TYPE[2]}/>} />\n          <Route path=\"/user/change-password/:token\" exact render={() => <IndexPage indexType={INDEX_TYPE} typeSelected={INDEX_TYPE[3]}/>} />\n        </React.Fragment>\n      )}\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import axios from \"axios\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\naxios.interceptors.request.use(\n  (request) => {\n    let basicToken = localStorage.getItem(\"token\");\n    if (basicToken) {\n      request.headers[\"Authorization\"] = basicToken;\n    }\n    return request;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}